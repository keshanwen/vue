{"version":3,"file":"runtime-dom.esm-bundler.js","sources":["../../shared/src/index.ts","../src/nodeOps.ts","../src/modules/attr.ts","../src/modules/class.ts","../src/modules/events.ts","../src/modules/style.ts","../src/patchProp.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/component.ts","../../runtime-core/src/scheduler.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/h.ts","../src/index.ts"],"sourcesContent":["export const isObject = (value) => typeof value == 'object' && value !== null;\r\nexport const extend = Object.assign;\r\nexport const isArray = Array.isArray;\r\nexport const isFunction = (value) => typeof value == 'function';\r\nexport const isNumber = (value) => typeof value == 'number';\r\nexport const isString = (value) => typeof value === 'string';\r\nexport const isIntegerKey = (key) => parseInt(key) + '' === key;\r\n\r\nlet hasOwnpRroperty = Object.prototype.hasOwnProperty;\r\nexport const hasOwn = (target, key) => hasOwnpRroperty.call(target, key);\r\n\r\nexport const hasChanged = (oldValue, value) => oldValue !== value;\r\n\r\nexport * from './shapeFlag'\r\n","export const nodeOps = {\r\n  // createElement, 不同的平台创建元素方式不同\r\n  // 元素\r\n  createElement: (tagName) => document.createElement(tagName), // 增加\r\n  remove: (child) => {\r\n    // 删除\r\n    const parent = child.parentNode;\r\n    if (parent) {\r\n      parent.removeChild(child);\r\n    }\r\n  },\r\n  insert: (child, parent, anchor = null) => {\r\n    // 插入\r\n    parent.insertBefore(child, anchor); // 如果参照物为空 则相当于appendChild\r\n  },\r\n  querySelector: (selector) => document.querySelector(selector),\r\n  setElementText: (el, text) => (el.textContent = text),\r\n  // 文本操作 创建文本\r\n  createText: (text) => document.createTextNode(text),\r\n  setText: (node, text) => (node.nodeValue = text),\r\n  nextSibling: (node) => node.nextSibling,\r\n};\r\n\r\n","\r\n\r\nexport const patchAttr = (el,key,value) =>{\r\n    if(value == null){\r\n        el.removeAttribute(key);\r\n    }else {\r\n        el.setAttribute(key,value);\r\n    }\r\n}","\r\n\r\nexport const patchClass = (el,value) =>{\r\n    if(value == null){\r\n        value = '';\r\n    }\r\n    el.className = value\r\n}","// 1.给元素缓存一个绑定事件的列表\r\n// 2.如果缓存中没有缓存过的，而且value有值 需要绑定方法，并且缓存起来\r\n// 3.以前绑定过需要删除掉，删除缓存\r\n// 4.如果前后都有，直接改变invoker中value属性指向最新的事件 即可\r\nexport const patchEvent = (el,key,value) =>{ // vue指令 删除和添加\r\n    // 对函数的缓存\r\n    const invokers = el._vei || (el._vei = {});\r\n    const exists = invokers[key]; // 如果不存在\r\n    if(value && exists){ // 需要绑定事件 而且还存在的情况下\r\n        exists.value = value;\r\n    }else{\r\n        const eventName = key.slice(2).toLowerCase();\r\n        if(value){ // 要绑定事件 以前没有绑定过\r\n            let invoker = invokers[key] = createInvoker(value);\r\n            el.addEventListener(eventName,invoker)\r\n        }else{ // 以前绑定了 当时没有value\r\n            el.removeEventListener(eventName,exists);\r\n            invokers[key] = undefined;\r\n        }\r\n    }\r\n}\r\nfunction createInvoker(value){\r\n    const invoker = (e) =>{ invoker.value(e);}\r\n    invoker.value = value; // 为了能随时更改value属性\r\n    return invoker;\r\n}\r\n\r\n// 一个元素 绑定事件  addEventListener(fn) addEventListener(fn1)\r\n\r\n// value = fn\r\n// div @click=\"fn\"  ()=> value()\r\n\r\n// div","export const patchStyle = (el,prev,next) =>{ // cssText;\r\n    const style = el.style; //获取样式\r\n    if(next == null){\r\n        el.removeAttribute('style') // {style:{}}  {}\r\n    }else{\r\n        // 老的里新的有没有\r\n        if(prev){  // {style:{color}} => {style:{background}}\r\n            for(let key in prev){\r\n                if(next[key] == null){ // 老的里有 新的里没有 需要删除\r\n                    style[key] = '';\r\n                }\r\n            }\r\n        }\r\n        // 新的里面需要赋值到style上\r\n        for(let key in next){ // {style:{color}} => {style:{background}}\r\n            style[key] = next[key];\r\n        }\r\n    }\r\n\r\n}","// 这个里面针对的是属性操作，一系列的属性操作\r\n\r\nimport { patchAttr } from \"./modules/attr\";\r\nimport { patchClass } from \"./modules/class\";\r\nimport { patchEvent } from \"./modules/events\";\r\nimport { patchStyle } from \"./modules/style\";\r\n\r\n\r\nexport const patchProp = (el,key,prevValue,nextValue) => {\r\n    switch (key) {\r\n        case 'class':\r\n            patchClass(el,nextValue); // 比对属性\r\n            break;\r\n        case 'style': // {style:{color:'red'}}  {style:{background:'red'}}\r\n            patchStyle(el,prevValue,nextValue);\r\n            break;\r\n        default:\r\n            // 如果不是事件 才是属性\r\n            if(/^on[^a-z]/.test(key)){\r\n                patchEvent(el,key,nextValue); // 事件就是添加和删除 修改\r\n            }else{\r\n                patchAttr(el,key,nextValue);\r\n            }\r\n\r\n            break;\r\n    }\r\n}\r\n","import { isArray, isIntegerKey } from '@vue/shared/src';\r\nimport { TriggerOrTypes } from './operators';\r\n\r\nexport function effect(fn, options: any = {}) {\r\n  // 我需要让这个effect变成响应的effect，可以做到数据变化重新执行\r\n  const effect = createReactiveEffect(fn, options);\r\n  if (!options.lazy) {\r\n    // 默认的effect会先执行\r\n    effect(); // 响应式的effect默认会先执行一次\r\n  }\r\n  return effect;\r\n}\r\nlet uid = 0;\r\nlet activeEffect; // 存储当前的effect\r\nconst effectStack = [];\r\nfunction createReactiveEffect(fn, options) {\r\n  const effect = function reactiveEffect() {\r\n    if (!effectStack.includes(effect)) {\r\n      // 保证effect没有加入到effectStack中\r\n      try {\r\n        effectStack.push(effect);\r\n        activeEffect = effect;\r\n        return fn(); // 函数执行时会取值  会执行get方法\r\n      } finally {\r\n        effectStack.pop();\r\n        activeEffect = effectStack[effectStack.length - 1];\r\n      }\r\n    }\r\n  };\r\n  effect.id = uid++; // 制作一个effect标识 用于区分effect\r\n  effect._isEffect = true; // 用于标识这个是响应式effect\r\n  effect.raw = fn; // 保留effect对应的原函数\r\n  effect.options = options; // 在effect上保存用户的属性\r\n  return effect;\r\n}\r\n// 让，某个对象中的属性 收集当前他对应的effect函数\r\nconst targetMap = new WeakMap();\r\nexport function track(target, type, key) {\r\n  // 可以拿到当前的effect\r\n  //  activeEffect; // 当前正在运行的effect\r\n  if (activeEffect === undefined) {\r\n    // 此属性不用收集依赖，因为没在effect中使用\r\n    return;\r\n  }\r\n  let depsMap = targetMap.get(target);\r\n  if (!depsMap) {\r\n    targetMap.set(target, (depsMap = new Map()));\r\n  }\r\n  let dep = depsMap.get(key);\r\n  if (!dep) {\r\n    depsMap.set(key, (dep = new Set()));\r\n  }\r\n  if (!dep.has(activeEffect)) {\r\n    dep.add(activeEffect);\r\n  }\r\n}\r\n\r\n// 找属性对应的effect 让其执行 （数组、对象）\r\nexport function trigger(target, type, key?, newValue?, oldValue?) {\r\n  // 如果这个属性没有 收集过effect，那不需要做任何操作\r\n  const depsMap = targetMap.get(target);\r\n  if (!depsMap) return;\r\n\r\n  const effects = new Set(); // 这里对effect去重了\r\n  const add = (effectsToAdd) => {\r\n    if (effectsToAdd) {\r\n      effectsToAdd.forEach((effect) => effects.add(effect));\r\n    }\r\n  };\r\n  // 我要将所有的 要执行的effect 全部存到一个新的集合中，最终一起执行\r\n\r\n  // 1. 看修改的是不是数组的长度 因为改长度影响比较大\r\n  if (key === 'length' && isArray(target)) {\r\n    // 如果对应的长度 有依赖收集需要更新\r\n    depsMap.forEach((dep, key) => {\r\n      if (key === 'length' || key > newValue) {\r\n        // 如果更改的长度 小于收集的索引，那么这个索引也需要触发effect重新执行\r\n        add(dep);\r\n      }\r\n    });\r\n  } else {\r\n    // 可能是对象\r\n    if (key !== undefined) {\r\n      // 这里肯定是修改， 不能是新增\r\n      add(depsMap.get(key)); // 如果是新增\r\n    }\r\n    // 如果修改数组中的 某一个索引 怎么办？\r\n    switch (\r\n      type // 如果添加了一个索引就触发长度的更新\r\n    ) {\r\n      case TriggerOrTypes.ADD:\r\n        if (isArray(target) && isIntegerKey(key)) {\r\n          add(depsMap.get('length'));\r\n        }\r\n    }\r\n  }\r\n  effects.forEach((effect: any) => {\r\n    if (effect.options.scheduler) {\r\n      effect.options.scheduler(effect)\r\n    } else {\r\n      effect()\r\n    }\r\n  });\r\n}\r\n// weakMap {name:'zf',age:12}  (map) =>{name => set(effect),age => set(effect)}\r\n// {name:'zf',age:12} => name => [effect effect]\r\n\r\n// 函数调用是一个栈型结构\r\n// effect(()=>{ // effect1   [effect1]\r\n//     state.name -> effect1\r\n//     effect(()=>{ // effect2\r\n//         state.age -> effect2\r\n//     })\r\n//     state.address -> effect1\r\n// })\r\n","// 实现 new Proxy(target, handler)\r\n\r\nimport {\r\n  extend,\r\n  hasChanged,\r\n  hasOwn,\r\n  isArray,\r\n  isIntegerKey,\r\n  isObject,\r\n} from '@vue/shared/src';\r\nimport { track, trigger } from './effect';\r\nimport { TrackOpTypes, TriggerOrTypes } from './operators';\r\nimport { reactive, readonly } from './reactive';\r\n\r\nconst get = createGetter();\r\nconst shallowGet = createGetter(false, true);\r\nconst readonlyGet = createGetter(true);\r\nconst showllowReadonlyGet = createGetter(true, true);\r\nconst set = createSetter();\r\nconst shallowSet = createSetter(true);\r\nexport const mutableHandlers = {\r\n  get,\r\n  set,\r\n};\r\nexport const shallowReactiveHandlers = {\r\n  get: shallowGet,\r\n  set: shallowSet,\r\n};\r\n\r\nlet readonlyObj = {\r\n  set: (target, key) => {\r\n    console.warn(`set on key ${key} falied`);\r\n  },\r\n};\r\nexport const readonlyHandlers = extend(\r\n  {\r\n    get: readonlyGet,\r\n  },\r\n  readonlyObj\r\n);\r\nexport const shallowReadonlyHandlers = extend(\r\n  {\r\n    get: showllowReadonlyGet,\r\n  },\r\n  readonlyObj\r\n);\r\n\r\n// 是不是仅读的，仅读的属性set时会报异常\r\n// 是不是深度的\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n  // 拦截获取功能\r\n  return function get(target, key, receiver) {\r\n    // let proxy = reactive({obj:{}})\r\n    // proxy + reflect\r\n    // 后续Object上的方法 会被迁移到Reflect Reflect.getProptypeof()\r\n    // 以前target[key] = value 方式设置值可能会失败 ， 并不会报异常 ，也没有返回值标识\r\n    // Reflect 方法具备返回值\r\n    // reflect 使用可以不使用 proxy es6语法\r\n\r\n    const res = Reflect.get(target, key, receiver); // target[key];\r\n    if (!isReadonly) {\r\n      // 收集依赖，等会数据变化后更新对应的视图\r\n      console.log('执行effect时会取值', '收集effect');\r\n\r\n      track(target, TrackOpTypes.GET, key);\r\n    }\r\n    if (shallow) {\r\n      return res;\r\n    }\r\n    if (isObject(res)) {\r\n      // vue2 是一上来就递归，vue3 是当取值时会进行代理 。 vue3的代理模式是懒代理\r\n      return isReadonly ? readonly(res) : reactive(res);\r\n    }\r\n    return res;\r\n  };\r\n}\r\nfunction createSetter(shallow = false) {\r\n  // 蓝爵设置功能\r\n  return function set(target, key, value, receiver) {\r\n    const oldValue = target[key]; // 获取老的值\r\n\r\n    let hadKey =\r\n      isArray(target) && isIntegerKey(key)\r\n        ? Number(key) < target.length\r\n        : hasOwn(target, key);\r\n\r\n    const result = Reflect.set(target, key, value, receiver); // target[key] = value\r\n\r\n    if (!hadKey) {\r\n      // 新增\r\n      trigger(target, TriggerOrTypes.ADD, key, value);\r\n    } else if (hasChanged(oldValue, value)) {\r\n      // 修改\r\n      trigger(target, TriggerOrTypes.SET, key, value, oldValue);\r\n    }\r\n\r\n    // 我们要区分是新增的 还是修改的  vue2 里无法监控更改索引，无法监控数组的长度变化  -》 hack的方法 需要特殊处理\r\n\r\n    // 当数据更新时 通知对应属性的effect重新执行\r\n\r\n    return result;\r\n  };\r\n}\r\n","import { isObject } from '@vue/shared';\r\nimport {\r\n  mutableHandlers,\r\n  shallowReactiveHandlers,\r\n  readonlyHandlers,\r\n  shallowReadonlyHandlers,\r\n} from './baseHandlers';\r\nexport function reactive(target) {\r\n  return createReactiveObject(target, false, mutableHandlers);\r\n}\r\nexport function shallowReactive(target) {\r\n  return createReactiveObject(target, false, shallowReactiveHandlers);\r\n}\r\n\r\nexport function readonly(target) {\r\n  return createReactiveObject(target, true, readonlyHandlers);\r\n}\r\n\r\nexport function shallowReadonly(target) {\r\n  return createReactiveObject(target, true, shallowReadonlyHandlers);\r\n}\r\n\r\n// 是不是仅读 是不是深度， 柯里化  new Proxy() 最核心的需要拦截 数据的读取和数据的修改  get set\r\nconst reactiveMap = new WeakMap(); // 会自动垃圾回收，不会造成内存泄漏， 存储的key只能是对象\r\nconst readonlyMap = new WeakMap();\r\nexport function createReactiveObject(target, isReadonly, baseHandlers) {\r\n  // 如果目标不是对象 没法拦截了，reactive这个api只能拦截对象类型\r\n  if (!isObject(target)) {\r\n    return target;\r\n  }\r\n  // 如果某个对象已经被代理过了 就不要再次代理了  可能一个对象 被代理是深度 又被仅读代理了\r\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n  const existProxy = proxyMap.get(target);\r\n  if (existProxy) {\r\n    return existProxy; // 如果已经被代理了 直接返回即可\r\n  }\r\n  const proxy = new Proxy(target, baseHandlers);\r\n  proxyMap.set(target, proxy); // 将要代理的对象 和对应代理结果缓存起来\r\n\r\n  return proxy;\r\n}\r\n","import { hasChanged, isArray, isObject } from '@vue/shared/src';\r\nimport { track, trigger } from './effect';\r\nimport { TrackOpTypes, TriggerOrTypes } from './operators';\r\nimport { reactive } from './reactive';\r\n\r\nexport function ref(value) {\r\n  // 将普通类型 变成一个对象 , 可以是对象 但是一般情况下是对象直接用reactive更合理\r\n  return createRef(value);\r\n}\r\n\r\n// ref 和 reactive的区别 reactive内部采用proxy  ref中内部使用的是defineProperty\r\n\r\nexport function shallowRef(value) {\r\n  return createRef(value, true);\r\n}\r\n\r\n// 后续 看vue的源码 基本上都是高阶函数 做了类似柯里化的功能\r\n\r\nconst convert = (val) => (isObject(val) ? reactive(val) : val);\r\n// beta 版本 之前的版本ref 就是个对象 ，由于对象不方便扩展 改成了类\r\nclass RefImpl {\r\n  public _value; //表示 声明了一个_value属性 但是没有赋值\r\n  public __v_isRef = true; // 产生的实例会被添加 __v_isRef 表示是一个ref属性\r\n  constructor(public rawValue, public shallow) {\r\n    // 参数中前面增加修饰符 标识此属性放到了实例上\r\n    this._value = shallow ? rawValue : convert(rawValue); // 如果是深度 需要把里面的都变成响应式的\r\n  }\r\n  // 类的属性访问器\r\n  get value() {\r\n    // 代理 取值取value 会帮我们代理到 _value上\r\n    track(this, TrackOpTypes.GET, 'value');\r\n    return this._value;\r\n  }\r\n  set value(newValue) {\r\n    if (hasChanged(newValue, this.rawValue)) {\r\n      // 判断老值和新值是否有变化\r\n      this.rawValue = newValue; // 新值会作为老值\r\n      this._value = this.shallow ? newValue : convert(newValue);\r\n      trigger(this, TriggerOrTypes.SET, 'value', newValue);\r\n    }\r\n  }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n  return new RefImpl(rawValue, shallow);\r\n}\r\n\r\nclass ObjectRefImpl {\r\n  public __v_isRef = true;\r\n  constructor(public target, public key) {}\r\n  get value() {\r\n    // 代理\r\n    return this.target[this.key]; // 如果原对象是响应式的就会依赖收集\r\n  }\r\n  set value(newValue) {\r\n    this.target[this.key] = newValue; // 如果原来对象是响应式的 那么就会触发更新\r\n  }\r\n}\r\n// promisify\r\n// promisifyAll\r\n\r\n// 将某一个key对应的值 转化成ref\r\nexport function toRef(target, key) {\r\n  // 可以把一个对象的值转化成 ref类型\r\n  return new ObjectRefImpl(target, key);\r\n}\r\n\r\nexport function toRefs(object) {\r\n  // object 可能传递的是一个数组 或者对象\r\n  const ret = isArray(object) ? new Array(object.length) : {};\r\n  for (let key in object) {\r\n    ret[key] = toRef(object, key);\r\n  }\r\n  return ret;\r\n}\r\n","import { isFunction } from \"@vue/shared/src\";\r\nimport { effect, track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\n// 作业：调试 collectionHandlers ref 的api 和 computed\r\nclass ComputedRefImpl{\r\n    public _dirty = true; // 默认取值时不要用缓存\r\n    public _value;\r\n    public effect;\r\n    constructor(getter,public setter){ // ts 中默认不会挂载到this上\r\n        this.effect = effect(getter,{\r\n            lazy:true, // 默认不执行\r\n            scheduler:()=>{\r\n                if(!this._dirty){\r\n                    this._dirty = true;\r\n                    trigger(this,TriggerOrTypes.SET,'value')\r\n                }\r\n            }\r\n        })\r\n    }\r\n    get value(){ // 计算属性也要收集依赖\r\n        if(this._dirty){\r\n            this._value = this.effect(); // 会将用户的反回值返回\r\n            this._dirty = false;\r\n        }\r\n        track(this,TrackOpTypes.GET,'value')\r\n        return this._value;\r\n    }\r\n    set value(newValue){\r\n        this.setter(newValue)\r\n    }\r\n}\r\n\r\n// vue2 和 vue3 computed原理是不一样的\r\nexport function computed(getterOrOptions){\r\n    let getter;\r\n    let setter;\r\n\r\n\r\n    if(isFunction(getterOrOptions)){\r\n        getter = getterOrOptions;\r\n        setter = () =>{\r\n            console.warn('computed value must be readonly')\r\n        }\r\n    }else{\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n\r\n    return new ComputedRefImpl(getter,setter)\r\n\r\n}","// createVNode  创建虚拟节点\r\n\r\nimport { isArray, isObject, isString, ShapeFlags } from \"@vue/shared/src\";\r\n\r\nexport function isVnode(vnode){\r\n    return vnode.__v_isVnode\r\n}\r\n// h(‘div',{style:{color:red}},'children'); //  h方法和createApp类似\r\nexport const createVNode = (type,props,children = null) =>{\r\n    // 可以根据type 来区分是组件 还是普通的元素\r\n\r\n    // 根据type来区分 是元素还是组件\r\n\r\n    // 给虚拟节点加一个类型\r\n    const shapeFlag = isString(type) ?\r\n        ShapeFlags.ELEMENT : isObject(type)?\r\n            ShapeFlags.STATEFUL_COMPONENT : 0\r\n\r\n\r\n    const vnode = { // 一个对象来描述对应的内容 ， 虚拟节点有跨平台的能力\r\n        __v_isVnode:true,// 他是一个vnode节点\r\n        type,\r\n        props,\r\n        children,\r\n        component:null, // 存放组件对应的实例\r\n        el:null, // 稍后会将虚拟节点和真实节点对应起来\r\n        key: props && props.key,// diff算法会用到key\r\n        shapeFlag // 判断出当前自己的类型 和 儿子的类型\r\n    }\r\n    normalizeChildren(vnode,children);\r\n    return vnode;\r\n}\r\n\r\nfunction normalizeChildren(vnode,children){\r\n    let type = 0;\r\n    if(children == null){ // 不对儿子进行处理\r\n\r\n    } else if(isArray(children)){\r\n        type = ShapeFlags.ARRAY_CHILDREN;\r\n    } else{\r\n        type = ShapeFlags.TEXT_CHILDREN;\r\n    }\r\n    vnode.shapeFlag |=  type\r\n}\r\nexport const Text = Symbol('Text')\r\nexport function normalizeVNode(child){\r\n    if(isObject(child)) return child;\r\n\r\n    return createVNode(Text,null,String(child));\r\n}","import { createVNode } from \"./vnode\"\r\n\r\nexport function createAppAPI(render){\r\n    return function createApp(rootComponent,rootProps){ // 告诉他那个组件那个属性来创建的应用\r\n        const app = {\r\n            _props:rootProps,\r\n            _component:rootComponent,\r\n            _container:null,\r\n            mount(container){ // 挂载的目的地\r\n                // let vnode = {}\r\n                // render(vnode,container);\r\n\r\n                // 1.根据组件创建虚拟节点\r\n                // 2.将虚拟节点和容器获取到后调用render方法进行渲染\r\n\r\n                // 创造虚拟节点\r\n                const vnode = createVNode(rootComponent,rootProps)\r\n\r\n                // 调用render\r\n                render(vnode,container)\r\n\r\n\r\n                app._container = container\r\n            }\r\n        }\r\n        return app\r\n    }\r\n}","import { hasOwn } from \"@vue/shared/src\"\r\n\r\nexport const PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        // 取值时 要访问 setUpState， props ,data\r\n        const { setupState, props, data } = instance;\r\n        if (key[0] == '$') {\r\n            return; // 不能访问$ 开头的变量\r\n        }\r\n        if (hasOwn(setupState, key)) {\r\n            return setupState[key];\r\n        } else if (hasOwn(props, key)) {\r\n            return props[key];\r\n        } else if (hasOwn(data, key)) {\r\n            return data[key];\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { setupState, props, data } = instance;\r\n        if (hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        } else if (hasOwn(props, key)) {\r\n            props[key] = value;\r\n        } else if (hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        return true;\r\n    }\r\n}","// 组件中所有的方法\r\n\r\nimport { isFunction, isObject, ShapeFlags } from \"@vue/shared/src\";\r\nimport { PublicInstanceProxyHandlers } from \"./componentPublicInstance\";\r\n\r\n\r\nexport function createComponentInstance(vnode) {\r\n    // webcomponent 组件需要有“属性” “插槽”\r\n    const instance = { // 组件的实例\r\n        vnode,\r\n        type: vnode.type, // 用户写的对象\r\n        props: {}, // props attrs 有什么区别 vnode.props\r\n        attrs: {},\r\n        slots: {},\r\n        ctx: {},\r\n        data:{},\r\n        setupState: {}, // 如果setup返回一个对象，这个对象会作为setUpstate\r\n        render: null,\r\n        subTree:null, // render函数的返回结果就是subTree\r\n        isMounted: false // 表示这个组件是否挂载过\r\n    }\r\n    instance.ctx = { _: instance } // instance.ctx._\r\n    return instance;\r\n}\r\n\r\nexport function setupComponent(instance) {\r\n    const { props, children } = instance.vnode; // {type,props,children}\r\n\r\n    // 根据props 解析出 props 和 attrs，将其放到instance上\r\n    instance.props = props; // initProps()\r\n    instance.children = children; // 插槽的解析 initSlot()\r\n\r\n    // 需要先看下 当前组件是不是有状态的组件， 函数组件\r\n\r\n    let isStateful = instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n    if (isStateful) { // 表示现在是一个带状态的组件\r\n        // 调用 当前实例的setup方法，用setup的返回值 填充 setupState和对应的render方法\r\n        setupStatefulComponent(instance)\r\n    }\r\n}\r\nfunction setupStatefulComponent(instance) {\r\n    // 1.代理 传递给render函数的参数\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers as any)\r\n    // 2.获取组件的类型 拿到组件的setup方法\r\n    let Component = instance.type\r\n    let { setup } = Component;\r\n    // ------ 没有setup------\r\n    if(setup){\r\n        let setupContext = createSetupContext(instance);\r\n        const setupResult = setup(instance.props, setupContext); // instance 中props attrs slots emit expose 会被提取出来，因为在开发过程中会使用这些属性\r\n\r\n        handleSetupResult(instance,setupResult)\r\n\r\n    }else{\r\n        finishComponentSetup(instance);// 完成组件的启动\r\n    }\r\n}\r\nfunction handleSetupResult(instance,setupResult){\r\n    if(isFunction(setupResult)){\r\n        instance.render = setupResult\r\n    }else if(isObject(setupResult)){\r\n        instance.setupState = setupResult\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nfunction finishComponentSetup(instance){\r\n    let Component = instance.type\r\n    if(!instance.render){\r\n        // 对template模板进行编译 产生render函数\r\n        // instance.render = render;// 需要将生成render函数放在实例上\r\n        if(!Component.render && Component.template){\r\n            // 编译 将结果 赋予给Component.render\r\n        }\r\n        instance.render = Component.render;\r\n    }\r\n\r\n    // 对vue2.0API做了兼容处理\r\n    // applyOptions\r\n}\r\nfunction createSetupContext(instance) {\r\n    return {\r\n        attrs: instance.attrs,\r\n        slots: instance.slots,\r\n        emit: () => { },\r\n        expose: () => { }\r\n    }\r\n}\r\n// 他们的关系涉及到后面的使用\r\n// instance 表示的组件的状态 各种各样的状态，组件的相关信息\r\n// context 就4个参数 是为了开发时使用的\r\n// proxy 主要为了取值方便  =》 proxy.xxxx","\r\nlet queue = [];\r\nexport function queueJob(job) {\r\n    if(!queue.includes(job)){\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nlet isFlushPending = false;\r\nfunction queueFlush(){\r\n    if(!isFlushPending){\r\n        isFlushPending = true;\r\n        Promise.resolve().then(flushJobs)\r\n    }\r\n}\r\n\r\nfunction flushJobs(){\r\n    isFlushPending = false\r\n    // 清空时  我们需要根据调用的顺序依次刷新  , 保证先刷新父在刷新子\r\n    queue.sort((a,b) => a.id - b.id);\r\n    for(let i = 0; i < queue.length; i++){\r\n        const job = queue[i];\r\n        job();\r\n    }\r\n    queue.length = 0;\r\n}","import { effect } from '@vue/reactivity/src';\r\nimport { ShapeFlags } from '@vue/shared/src';\r\nimport { createAppAPI } from './apiCreateApp';\r\nimport { createComponentInstance, setupComponent } from './component';\r\nimport { queueJob } from './scheduler';\r\nimport { normalizeVNode, Text } from './vnode';\r\n\r\nexport function createRenderer(rendererOptions) {\r\n  // 告诉core 怎么渲染\r\n\r\n  const {\r\n    insert: hostInsert,\r\n    remove: hostRemove,\r\n    patchProp: hostPatchProp,\r\n    createElement: hostCreateElement,\r\n    createText: hostCreateText,\r\n    createComment: hostCreateComment,\r\n    setText: hostSetText,\r\n    setElementText: hostSetElementText,\r\n    nextSibling: hostNextSibling,\r\n  } = rendererOptions;\r\n\r\n  // -------------------组件----------------------\r\n  const setupRenderEfect = (instance, container) => {\r\n    // 需要创建一个effect 在effect中调用 render方法，这样render方法中拿到的数据会收集这个effect，属性更新时effect会重新执行\r\n    instance.update = effect(\r\n      function componentEffect() {\r\n        // 每个组件都有一个effect， vue3 是组件级更新，数据变化会重新执行对应组件的effect\r\n        if (!instance.isMounted) {\r\n          // 初次渲染\r\n          let proxyToUse = instance.proxy;\r\n          // $vnode  _vnode\r\n          // vnode  subTree\r\n          let subTree = (instance.subTree = instance.render.call(\r\n            proxyToUse,\r\n            proxyToUse\r\n          ));\r\n\r\n          // 用render函数的返回值 继续渲染\r\n          patch(null, subTree, container);\r\n          instance.isMounted = true;\r\n        } else {\r\n          // diff算法  （核心 diff + 序列优化 watchApi 生命周期）\r\n          // ts 一周\r\n          // 组件库\r\n          // 更新逻辑\r\n          const prevTree = instance.subTree;\r\n          let proxyToUse = instance.proxy;\r\n          const nextTree = instance.render.call(proxyToUse, proxyToUse);\r\n\r\n          patch(prevTree, nextTree, container);\r\n        }\r\n      },\r\n      {\r\n        scheduler: queueJob,\r\n      }\r\n    );\r\n  };\r\n  const mountComponent = (initialVNode, container) => {\r\n    // 组件的渲染流程  最核心的就是调用 setup拿到返回值，获取render函数返回的结果来进行渲染\r\n    // 1.先有实例\r\n    const instance = (initialVNode.component =\r\n      createComponentInstance(initialVNode));\r\n    // 2.需要的数据解析到实例上\r\n    setupComponent(instance); // state props attrs render ....\r\n    // 3.创建一个effect 让render函数执行\r\n    setupRenderEfect(instance, container);\r\n  };\r\n  const processComponent = (n1, n2, container) => {\r\n    if (n1 == null) {\r\n      // 组件没有上一次的虚拟节点\r\n      mountComponent(n2, container);\r\n    } else {\r\n      // 组件更新流程\r\n    }\r\n  };\r\n  // ------------------组件 ------------------\r\n\r\n  //----------------- 处理元素-----------------\r\n  const mountChildren = (children, container) => {\r\n    for (let i = 0; i < children.length; i++) {\r\n      let child = normalizeVNode(children[i]);\r\n      patch(null, child, container);\r\n    }\r\n  };\r\n  const mountElement = (vnode, container, anchor = null) => {\r\n    // 递归渲染\r\n    const { props, shapeFlag, type, children } = vnode;\r\n    let el = (vnode.el = hostCreateElement(type));\r\n\r\n    if (props) {\r\n      for (const key in props) {\r\n        hostPatchProp(el, key, null, props[key]);\r\n      }\r\n    }\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      hostSetElementText(el, children); // 文本比较简单 直接扔进去即可\r\n    } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      mountChildren(children, el);\r\n    }\r\n    hostInsert(el, container, anchor);\r\n  };\r\n\r\n  const patchProps = (oldProps, newProps, el) => {\r\n    if (oldProps !== newProps) {\r\n      for (let key in newProps) {\r\n        const prev = oldProps[key];\r\n        const next = newProps[key];\r\n        if (prev !== next) {\r\n          hostPatchProp(el, key, prev, next);\r\n        }\r\n      }\r\n      for (const key in oldProps) {\r\n        if (!(key in newProps)) {\r\n          hostPatchProp(el, key, oldProps[key], null);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const patchKeyedChildren = (c1, c2, el) => {\r\n    // Vue3 对特殊情况进行优化\r\n\r\n    let i = 0; // 都是默认从头开始比对\r\n    let e1 = c1.length - 1;\r\n    let e2 = c2.length - 1;\r\n\r\n    // 尽可能较少比对的区域\r\n\r\n    // sync from start 从头开始一个个比 遇到不同的就停止了\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[i];\r\n      const n2 = c2[i];\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(n1, n2, el);\r\n      } else {\r\n        break;\r\n      }\r\n      i++;\r\n    }\r\n    // sync from end\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[e1];\r\n      const n2 = c2[e2];\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(n1, n2, el);\r\n      } else {\r\n        break;\r\n      }\r\n      e1--;\r\n      e2--;\r\n    }\r\n\r\n    // common sequence + mount  有一方已经完全比对完成了\r\n    // 比较后\r\n    // 怎么确定是要挂载呢？\r\n\r\n    // 如果完成后 最终i的值大于e1 说明老的少\r\n\r\n    if (i > e1) {\r\n      // 老的少 新的多   有一方已经完全比对完成了\r\n      if (i <= e2) {\r\n        // 表示有新增的部分\r\n        const nextPos = e2 + 1;\r\n        // 想知道是向前插入 还是向后插入\r\n        const anchor = nextPos < c2.length ? c2[nextPos].el : null;\r\n        while (i <= e2) {\r\n          patch(null, c2[i], el, anchor); // 只是向后追加\r\n          i++;\r\n        }\r\n      }\r\n    } else if (i > e2) {\r\n      // 老的多新的少    有一方已经完全比对完成了\r\n      while (i <= e1) {\r\n        unmount(c1[i]);\r\n        i++;\r\n      }\r\n    } else {\r\n      // 乱序比较 ， 需要尽可能复用  用新的元素做成一个映射表去老的里找，一样的就复用， 不一样的要不插入 要不删除\r\n\r\n      let s1 = i;\r\n      let s2 = i;\r\n\r\n      // vue3 用的是新的做的映射表 vue2 用的是老的做的映射表\r\n      const keyToNewIndexMap = new Map(); // 索引 ： 值 weakMap :key 对象\r\n\r\n      for (let i = s2; i <= e2; i++) {\r\n        const childVNode = c2[i]; // child\r\n        keyToNewIndexMap.set(childVNode.key, i);\r\n      }\r\n\r\n      const toBePatched = e2 - s2 + 1;\r\n      const newIndexToOldIndexMap = new Array(toBePatched).fill(0);\r\n\r\n      // 去老的里面查找 看用没有复用的\r\n      for (let i = s1; i <= e1; i++) {\r\n        const oldVnode = c1[i];\r\n        let newIndex = keyToNewIndexMap.get(oldVnode.key);\r\n        if (newIndex === undefined) {\r\n          // 老的里的不在新的中\r\n          unmount(oldVnode);\r\n        } else {\r\n          // 新老的比对 , 比较完毕后位置有差异\r\n          // 新的和旧的关系 索引的关系\r\n          newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n          patch(oldVnode, c2[newIndex], el); // patch的操作 是不是会复用元素 更新属性 比较儿子\r\n        }\r\n      }\r\n      // [5,3,4,0] => [1,2]\r\n      let increasingNewIndexSequence = getSequence(newIndexToOldIndexMap);\r\n\r\n      let j = increasingNewIndexSequence.length - 1; // 取出最后一个人的索引\r\n      for (let i = toBePatched - 1; i >= 0; i--) {\r\n        let currentIndex = i + s2; // 找到h的索引\r\n        let child = c2[currentIndex]; // 找到h对应的节点\r\n        let anchor =\r\n          currentIndex + 1 < c2.length ? c2[currentIndex + 1].el : null; // 第一次插入h 后 h是一个虚拟节点，同时插入后 虚拟节点会\r\n\r\n        if (newIndexToOldIndexMap[i] == 0) {\r\n          // 如果自己是0说明没有被patch过\r\n          patch(null, child, el, anchor);\r\n        } else {\r\n          // [1,2,3,4,5,6]\r\n          // [1,6,2,3,4,5]  // 最长递增子序列\r\n          // 这种操作 需要将节点全部的移动一遍， 我希望可以尽可能的少移动   [5,3,4,0]\r\n          // 3 2 1 0\r\n          // [1,2]    2\r\n          if (i != increasingNewIndexSequence[j]) {\r\n            hostInsert(child.el, el, anchor); // 操作当前的d 以d下一个作为参照物插入\r\n          } else {\r\n            j--; // 跳过不需要移动的元素， 为了减少移动操作 需要这个最长递增子序列算法\r\n          }\r\n        }\r\n      }\r\n\r\n      // 最后就是移动节点，并且将新增的节点插入\r\n      // 最长递增子序列\r\n    }\r\n  };\r\n  function getSequence(arr) {\r\n    // 最终的结果是索引\r\n    const len = arr.length;\r\n    const result = [0]; // 索引  递增的序列 用二分查找性能高\r\n    const p = arr.slice(0); // 里面内容无所谓 和 原本的数组相同 用来存放索引\r\n    let start;\r\n    let end;\r\n    let middle;\r\n    for (let i = 0; i < len; i++) {\r\n      // O(n)\r\n      const arrI = arr[i];\r\n      if (arrI !== 0) {\r\n        let resultLastIndex = result[result.length - 1];\r\n        // 取到索引对应的值\r\n        if (arr[resultLastIndex] < arrI) {\r\n          p[i] = resultLastIndex; // 标记当前前一个对应的索引\r\n          result.push(i);\r\n          // 当前的值 比上一个人大 ，直接push ，并且让这个人得记录他的前一个\r\n          continue;\r\n        }\r\n        // 二分查找 找到比当前值大的那一个\r\n        start = 0;\r\n        end = result.length - 1;\r\n        while (start < end) {\r\n          // 重合就说明找到了 对应的值  // O(logn)\r\n          middle = ((start + end) / 2) | 0; // 找到中间位置的前一个\r\n          if (arr[result[middle]] < arrI) {\r\n            start = middle + 1;\r\n          } else {\r\n            end = middle;\r\n          } // 找到结果集中，比当前这一项大的数\r\n        }\r\n        // start / end 就是找到的位置\r\n        if (arrI < arr[result[start]]) {\r\n          // 如果相同 或者 比当前的还大就不换了\r\n          if (start > 0) {\r\n            // 才需要替换\r\n            p[i] = result[start - 1]; // 要将他替换的前一个记住\r\n          }\r\n          result[start] = i;\r\n        }\r\n      }\r\n    }\r\n    let len1 = result.length; // 总长度\r\n    let last = result[len1 - 1]; // 找到了最后一项\r\n    while (len1-- > 0) {\r\n      // 根据前驱节点一个个向前查找\r\n      result[len1] = last;\r\n      last = p[last];\r\n    }\r\n    return result;\r\n  } // O(nlogn) 性能比较好 O(n^2)\r\n\r\n  const unmountChildren = (children) => {\r\n    for (let i = 0; i < children.length; i++) {\r\n      unmount(children[i]);\r\n    }\r\n  };\r\n  const patchChildren = (n1, n2, el) => {\r\n    const c1 = n1.children; // 新老儿子\r\n    const c2 = n2.children;\r\n\r\n    // 老的有儿子 新的没儿子  新的有儿子老的没儿子  新老都有儿子  新老都是文本\r\n\r\n    const prevShapeFlag = n1.shapeFlag;\r\n    const shapeFlag = n2.shapeFlag; // 分别标识过儿子的状况\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      // case1:现在是文本之前是数组\r\n      // 老的是n个孩子 但是新的是文本\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unmountChildren(c1); // 如果c1 中包含组件会调用组件的销毁方法\r\n      }\r\n      // 两个人都是文本情况\r\n      if (c2 !== c1) {\r\n        // case2：两个都是文本\r\n        hostSetElementText(el, c2);\r\n      }\r\n    } else {\r\n      // 现在是数组   上一次有可能是文本 或者数组\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        // case3:两个都是数组\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          // 当前是数组 之前是数组\r\n          // 两个数组的比对  -》 diff算法  ***********************\r\n\r\n          patchKeyedChildren(c1, c2, el);\r\n        } else {\r\n          // 没有孩子  特殊情况 当前是null ， 删除掉老的\r\n          unmountChildren(c1);\r\n        }\r\n      } else {\r\n        // 上一次是文本\r\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n          // case4 现在是数组 之前是文本\r\n          hostSetElementText(el, '');\r\n        }\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(c2, el);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const patchElement = (n1, n2, container) => {\r\n    // 元素是相同节点\r\n    let el = (n2.el = n1.el);\r\n\r\n    // 更新属性  更新儿子\r\n    const oldProps = n1.props || {};\r\n    const newProps = n2.props || {};\r\n\r\n    patchProps(oldProps, newProps, el);\r\n\r\n    patchChildren(n1, n2, el);\r\n  };\r\n  const processElement = (n1, n2, container, anchor) => {\r\n    if (n1 == null) {\r\n      mountElement(n2, container, anchor);\r\n    } else {\r\n      patchElement(n1, n2, container);\r\n    }\r\n  };\r\n  //----------------- 处理元素-----------------\r\n\r\n  // -----------------文本处理-----------------\r\n  const processText = (n1, n2, container) => {\r\n    if (n1 == null) {\r\n      hostInsert((n2.el = hostCreateText(n2.children)), container);\r\n    }\r\n  };\r\n  // -----------------文本处理-----------------\r\n\r\n  const isSameVNodeType = (n1, n2) => {\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n  };\r\n  const unmount = (n1) => {\r\n    // 如果是组件 调用的组件的生命周期等\r\n\r\n    hostRemove(n1.el);\r\n  };\r\n  const patch = (n1, n2, container, anchor = null) => {\r\n    // 针对不同类型 做初始化操作\r\n    const { shapeFlag, type } = n2;\r\n\r\n    if (n1 && !isSameVNodeType(n1, n2)) {\r\n      // 把以前的删掉 换成n2\r\n      anchor = hostNextSibling(n1.el);\r\n      unmount(n1);\r\n      n1 = null; // 重新渲染n2 对应的内容\r\n    }\r\n\r\n    switch (type) {\r\n      case Text:\r\n        processText(n1, n2, container);\r\n        break;\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          processElement(n1, n2, container, anchor);\r\n        } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n          processComponent(n1, n2, container);\r\n        }\r\n    }\r\n  };\r\n  const render = (vnode, container) => {\r\n    // core的核心, 根据不同的虚拟节点 创建对应的真实元素\r\n\r\n    // 默认调用render 可能是初始化流程\r\n    patch(null, vnode, container);\r\n  };\r\n  return {\r\n    createApp: createAppAPI(render),\r\n  };\r\n}\r\n// createRenderer 目的是创建一个渲染器\r\n\r\n// 框架 都是将组件 转化成虚拟DOM -》 虚拟DOM生成真实DOM挂载到真实页面上\r\n","import { isArray, isObject } from \"@vue/shared/src\";\r\nimport { createVNode, isVnode } from \"./vnode\";\r\n\r\n\r\nexport function h(type, propsOrChildren, children) {\r\n    const l = arguments.length; // 儿子节点要么是字符串 要么是数组 针对的是createVnode\r\n    if (l == 2) { // 类型 + 属性 、  类型 + 孩子\r\n        // 如果propsOrChildren 是数组 直接作为第三个参数\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            if(isVnode(propsOrChildren)){\r\n                return createVNode(type,null,[propsOrChildren]);\r\n            }\r\n            return createVNode(type,propsOrChildren)\r\n        } else {\r\n            // 如果第二个参数 不是对象 那一定是孩子\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }else{\r\n        if(l > 3){\r\n            children = Array.prototype.slice.call(arguments,2);\r\n        }else if(l === 3 && isVnode(children)){\r\n            children = [children]\r\n        }\r\n        return createVNode(type,propsOrChildren,children);\r\n    }\r\n}","// runtime-dom 核心就是  提供domAPI方法了\r\n//操作节点、操作属性的更新\r\n\r\nimport { extend } from \"@vue/shared/src\";\r\nimport { nodeOps } from \"./nodeOps\"; // 对象\r\nimport { patchProp } from \"./patchProp\"; // 方法\r\nimport {createRenderer} from '@vue/runtime-core'\r\n\r\n// 节点操作就是增删改查\r\n// 属性操作 添加 删除 更新 (样式、类、事件、其他属性)\r\n\r\n\r\n// 渲染时用到的所有方法\r\nconst rendererOptions = extend({ patchProp }, nodeOps)\r\n\r\n// vue中runtime-core 提供了核心的方法 用来处理渲染的，他会使用runtime-dom中的api进行渲染\r\nexport function createApp(rootComponent, rootProps = null) {\r\n    const app = createRenderer(rendererOptions).createApp(rootComponent,rootProps)\r\n    let {mount} = app\r\n    app.mount = function (container) {\r\n        // 清空容器的操作\r\n        container = nodeOps.querySelector(container);\r\n        container.innerHTML = '';\r\n        mount(container); // 函数劫持\r\n        // 将组件 渲染成dom元素 进行挂载\r\n    }\r\n    return app;\r\n}\r\n\r\n\r\n\r\nexport * from '@vue/runtime-core';\r\n\r\n// 用户调用的是runtime-dom  -> runtime-core\r\n// runtime-dom 是为了解决平台差异 （浏览器的）\r\n"],"names":[],"mappings":"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"}