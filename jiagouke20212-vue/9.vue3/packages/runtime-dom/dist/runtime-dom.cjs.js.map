{"version":3,"file":"runtime-dom.cjs.js","sources":["../../shared/src/index.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/component.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/h.ts","../src/nodeOps.ts","../src/modules/attr.ts","../src/modules/class.ts","../src/modules/event.ts","../src/modules/style.ts","../src/patchProp.ts","../src/index.ts"],"sourcesContent":["export const isObject = (val) => typeof val == 'object' && val !== null;\nexport const isNumber = (val) => typeof val == 'number';\nexport const isFunction = (val) => typeof val == 'function'\nexport const isString = (val) => typeof val == 'string'\nexport const isBoolean = (val) =>  typeof val == 'boolean';\nexport const isArray =  Array.isArray;\nexport const extend = Object.assign;\n\n\n// 判断属性是不是原型属性 \nexport const hasOwn = (target,key) => Object.prototype.hasOwnProperty.call(target,key);\nexport const hasChanged = (oldValue,value) => oldValue !== value\n\nexport const isInteger = (key) => parseInt(key) + '' === key; // '3'  arr.xxx\n\n\n\nexport const enum ShapeFlags {\n    ELEMENT = 1, // 1元素\n    FUNCTIONAL_COMPONENT = 1 << 1, // 函数式组件 2 \n    STATEFUL_COMPONENT = 1 << 2, // 带状态的组件 4 \n    TEXT_CHILDREN = 1 << 3, // 内容是文本还 8 \n    ARRAY_CHILDREN = 1 << 4, // 内容是数组孩子 16\n    SLOTS_CHILDREN = 1 << 5,\n    TELEPORT = 1 << 6,\n    SUSPENSE = 1 << 7,\n    COMPONENT_SHOULD_KEEP_ALIVE = 1 << 8,\n    COMPONENT_KEPT_ALIVE = 1 << 9,\n    COMPONENT = ShapeFlags.STATEFUL_COMPONENT | ShapeFlags.FUNCTIONAL_COMPONENT\n  }\n  \n\n  // +=   LET XXX = A+B\n  // |=   LET XXX = A | B","import { isArray, isInteger } from \"@vue/shared/src\";\n\nexport function effect(fn, options: any = {}) { // fn 不具备数据变化了就更新视图\n    let effect = createReactiveEffect(fn, options); // 把fn包装成一个响应式的函数\n    if (!options.lazy) {\n        effect();\n    }\n    return effect\n}\nlet uid = 0;\nlet activeEffect; // 此模块内唯一的一个变量\nfunction createReactiveEffect(fn, options) {\n    const effect = function () {\n        // 我需要将effect暴露到外层\n        activeEffect = effect; // Dep.target = watcher\n\n        fn(); // 当我执行用户传入的函数时 会执行get方法\n        activeEffect = null;\n\n    }\n    effect.id = uid++; // 每个effect都有一个唯一的标识 （watcher）\n    effect._isEffect = true; // 用于标识这个函数是一个effect函数\n    effect.raw = fn; // 把用户传入的函数保存到当前的effect上\n    effect.deps = []; // 后续用来存放此effect对于哪些属性\n    effect.options = options;\n    return effect;\n}\n// obj   name   => \n/**\nweakMap = {\n    object:Map({\n        name:new Set(effect,effect)\n    })\n}\n */\nconst targetMap = new WeakMap(); // weakMap 的key只能是对象\nexport function track(target, type, key) { // {obj:name=> [effect,effect]}  weakMap : (map){key: new Set()}\n    if (!activeEffect) { // 说明取值操作是在effect之外操作的 \n        return\n    } // 直接跳过依赖收集\n    let depsMap = targetMap.get(target); // 先尝试看一下这个对象中是否存过属性\n    if (!depsMap) {\n        targetMap.set(target, (depsMap = new Map)); // {obj:map({key:set(effect,effect)})}\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n        depsMap.set(key, (dep = new Set));\n    }\n    if (!dep.has(activeEffect)) { // 同一个属性 不会添加重复的effect\n        dep.add(activeEffect)\n    }\n    // 制作一个依赖收集的关联列表\n}\nexport function trigger(target, key, value, type) { // ? 会引起 没用到的属性修改也会更新 \n    const depsMap = targetMap.get(target); // 先看一下有没有收集过依赖\n\n    if (!depsMap) return; // 如果没有收集过 直接跳过\n\n\n    // 为了实现批处理 我们把所有的effect放到一个set中 ，做一下去重 \n    const effectsQueue = new Set();\n    const add = (effectsToAdd) => {\n        if (effectsToAdd) effectsToAdd.forEach(effect=>effectsQueue.add(effect));\n    }\n    // 如果修改的是数组 并且改的是长度 要做一些处理  \n    if (isArray(target) && key == 'length') {\n        // value; // 是数组长度   depsMap 存放的key 可能是索引 如果索引大于数组长度 修奥触发更新\n        depsMap.forEach((dep, depKey) => { \n            // [1,2,3]  arr[2]  arr.length = 1  3=> undefined\n            // [1,2,3]  arr[2]  arr.length = 100  3=> 3\n            if (depKey == 'length' || value < depKey) {\n                add(dep)\n            }\n        })\n    } else {\n        if (type == 'add') { // 新增逻辑 需要触发更新 触发length的更新 针对的是数组 \n            if (isArray(target) && isInteger(key)) {\n                add(depsMap.get('length'))\n            }else{ // 对象新增逻辑, 对象新增逻辑也要触发对应的更新\n                add(depsMap.get(key))\n            }\n        } else {\n            const effects = depsMap.get(key); // 找到此属性对应的effect列表 ，直接执行即可\n            add(effects)\n        }\n    }\n    effectsQueue.forEach((effect:any)=>{\n        if(effect.options.scheduler){\n            effect.options.scheduler(effect)\n        }else{\n            effect()\n        }\n    });\n    \n}","// 我们期望 实现get和set\n\nimport { extend, hasChanged, hasOwn, isArray, isInteger, isObject } from \"@vue/shared/src\";\nimport { track, trigger } from \"./effect\";\nimport { reactive, readonly } from \"./reactive\";\n\nconst get = createGetter();\nconst readonlyGet = createGetter(true); // 仅读的get\nconst shallowGet = createGetter(false, true); // 非仅读但是是浅的\nconst shallowReadonlyGet = createGetter(true, true); // 仅读是浅的\n\nconst set = createSetter();\n\n// 响应式原理的核心就在这个依赖收集\nconst readonlySet = {\n    set(target, key) {\n        console.warn(`cannot set on ${key}, readonly!!!`)\n    }\n}\nfunction createSetter() {\n    return function set(target, key, value, receiver) { // value就是设置的值 ，其他一样\n        debugger;\n        let oldValue = target[key]; // 原对象来缓存老值，没有通过代理对象 不会触发get\n\n        // 如果是新增也要触发更新 \n        let hadKey = isArray(target) && isInteger(key) ? key < target.length : hasOwn(target,key);\n\n\n        // 触发视图更新， 去做处理\n\n        let res = Reflect.set(target, key, value, receiver); // target[key] = value\n\n        if(!hadKey){ // 新增逻辑\n            trigger(target, key, value,'add');\n        }else if (hasChanged(oldValue, value)) {\n            // 需要触发更新逻辑  obj name\n            trigger(target, key, value,'set'); // 触发这个对象上的属性 让他更新\n        }\n        return res;\n    }\n}\n\n\nfunction createGetter(isReadonly = false, shallow = false) {\n    // 取值的时候第一个是目标 ， 第二个是属性是谁， 第三个就是代理对象是谁\n    return function get(target, key, receiver) { // new Proxy({},{get(){}})\n        // 依赖收集  proxy 和 reflect 一般情况下会联合使用\n\n        let res = Reflect.get(target, key, receiver) //  target[key]\n        if (!isReadonly) { // 如果对象是一个仅读的属性，那就以意味着这个对象不可能被更改，不可能更新视图，不需要增添依赖收集\n            // 不是进仅读的才去收集依赖\n\n            // 如果当前是在effect中取值 要做一个映射关系  obj name -》 [effect,effect]\n            //                                         obj age  -》 [effect]\n            //  let dep  = new Dep() dep.depend()\n\n            track(target, 'get', key);\n\n        }\n        if (shallow) {\n            return res; // 如果是浅的说明不需要递归代理了\n        }\n        if (isObject(res)) { // 如果是对象 就递归代理，但是不是一开始就代理，是在用到这个对象的时候才进行代理的\n            return isReadonly ? readonly(res) : reactive(res)\n        }\n        return res//  target[key];  懒代理，当取值的时候才去进行代理 \n    }\n}\nexport const mutableHandlers = { // 核心进行劫持的方法  处理get和set的逻辑\n    get,\n    set\n}\nexport const shallowReactiveHandlers = {\n    get: shallowGet,\n    set\n}\nexport const readonlyHandlers = extend({\n    get: readonlyGet,\n}, readonlySet)\nexport const shallowReadonlyHandlers = extend({\n    get: shallowReadonlyGet,\n}, readonlySet)","// 根据不同的参数实现不同的功能 \nimport { isObject } from \"@vue/shared\"\nimport { mutableHandlers, readonlyHandlers, shallowReactiveHandlers, shallowReadonlyHandlers } from \"./baseHandlers\"\n\n// proxy 是一个es6的api，兼容性差\n\nconst reactiveMap = new WeakMap(); // 对象的key 不能用对象, 弱“引用”， map的key是可以用对象的  weakMap中的key只能是对象，如果引用的key 被置为 null weakmap 会自行自动回收\nconst readonlyMap = new WeakMap();\nconst shallowReadonlyMap = new WeakMap();\nconst shallowReactiveMap = new WeakMap();\nexport function reactive(target:object){ // mutableHandlers\n    return createReactiveObject(target,mutableHandlers,reactiveMap);\n}\nexport function shallowReactive(target:object){ // shallowReactiveHandlers\n    return createReactiveObject(target,shallowReactiveHandlers,shallowReactiveMap)\n}\nexport function readonly(target:object){ // readonlyHandlers\n    return createReactiveObject(target,readonlyHandlers,readonlyMap)\n}\nexport function shallowReadonly(target:object){ // shallowReadonlyHandlers\n    return createReactiveObject(target,shallowReadonlyHandlers,shallowReadonlyMap)\n}\n\n// 以上四个方法最终用的都是这一个方法，这个方法会根据参数的不同 来进行不同的处理\n\n\nexport function createReactiveObject(target,baseHandlers,proxyMap) {\n    // 和 vue2 一样要看一下目标是不是对象\n    if(!isObject(target)){\n        return target\n    }\n    // 创建代理对象返回， let obj = {} reactive(obj)   readonly(obj) 做缓存 不要重复代理\n    // const proxyMap  = isReadonly ? readonlyMap : reactiveMap\n    const existsProxy = proxyMap.get(target);\n    if(existsProxy){\n        return existsProxy\n    }\n    const proxy = new Proxy(target,baseHandlers);\n    proxyMap.set(target,proxy); // 缓存起来\n    return proxy\n}","import { hasChanged, isArray, isObject } from \"@vue/shared/src\";\nimport { track, trigger } from \"./effect\";\nimport { reactive } from \"./reactive\";\n\n\nexport function ref(value) {\n    return createRef(value);\n}\n\nexport function shallowRef(value) {\n    return createRef(value, true);\n}\nconst convert = val => isObject(val) ? reactive(val) : val;\n\nclass RefImpl {\n    private _value;\n    constructor(private rawValue, public isShallow) {\n        this._value = isShallow ? rawValue : convert(rawValue) // this._value 就是一个私有属性 \n    }\n    // 这两个方法 会被转化成defineProperty\n    get value() {\n        track(this, 'get', 'value')\n        return this._value;\n    }\n    set value(newValue) {\n        if (hasChanged(newValue, this.rawValue)) {\n            this.rawValue = newValue; // 说明属性变化 需要更新\n            this._value = this.isShallow ? newValue : convert(newValue)\n            trigger(this, 'value', newValue, 'set');\n        }\n\n    }\n}\nfunction createRef(value, isShallow = false) {\n    return new RefImpl(value, isShallow)\n\n}\nclass ObjectRefImpl{ // vue2 proxy 是一样的\n    constructor(public target,public key){}\n    get value(){\n        return this.target[this.key];\n    }\n    set value(newValue){\n        this.target[this.key] = newValue;\n    }\n}\n\n// promisefy\n// promisifyAll\nexport function toRefs(object){\n    // 对象的浅拷贝 \n    const ret = isArray(object)? new Array(object.length) : {};\n    for(let key in object){\n        ret[key] = toRef(object,key);\n    }\n    return ret;\n}\n\n\nexport function toRef(target,key){ // 就是取出某个属性变成ref\n    return new ObjectRefImpl(target,key)\n}\n\n\n// 模板渲染的时候 会去判断是不是ref 如果是ref  就直接.value","// h 最终也会调用这个方法  h('div',{},'a','b')  h(组件)  h(函数)  。。。\n\nimport { isArray, isObject, isString, ShapeFlags } from \"@vue/shared/src\";\n\nexport function createVnode(type, props, children = null) { // []\n    const shapeFlag =\n        isString(type) ? ShapeFlags.ELEMENT :\n            isObject(type) ? ShapeFlags.STATEFUL_COMPONENT\n                : 0;\n\n    const vnode = {\n        __v_isVnode:true,\n        type,\n        props,\n        children,\n        el:null, // 对应的真实节点,\n        key:props && props.key, // diff 算法需要key\n        shapeFlag // 描述虚拟节点是什么类型的\n    }\n\n    normalizeChildren(vnode,children)\n    // 我要看这个标签 他和他的儿子怎么做\n    // diff算法的时候 需要判断两方都有儿子  ， 一方儿子是什么类型的...\n\n    return vnode;\n}\n\nfunction normalizeChildren(vnode,children){\n    if(children == null){\n\n    }else if(isArray(children)){\n        vnode.shapeFlag |= ShapeFlags.ARRAY_CHILDREN;\n    } else{\n        vnode.shapeFlag |= ShapeFlags.TEXT_CHILDREN;\n    }\n}\n\n// isElementAndArrayChildren\n\n// h('div',{},['hello','wolred])  此虚拟节点的shapeFlag 是17 表示 他是一个元素 有多个儿子\n// shapeFlag = 1 | 16\n\n\n// 17 是不是元素  17 & 1 大于0是元素\n// 17 & 16 如果是大于0 就是数组孩子\n","import { createVnode } from \"./vnode\";\n\nexport function createAppAPI(render){\n    return (rootComponent,rootProps)=>{ // 创建应用你需要给我传入组件和属性\n        let app = {\n            _component:rootComponent,\n            _rootProps:rootProps,\n            _container:null,\n            use(){\n\n            },\n            mixin(){\n\n            },\n            component(){\n\n            },\n            mount(container){ // 容器\n                // 创建一个虚拟节点\n                const vnode = createVnode(rootComponent,rootProps); // h方法\n    \n                // 将虚拟节点 转换成真实节点，插入到container中\n    \n                render(vnode,container);\n\n                app._container = container;\n                \n            }\n        }\n        return app\n    }\n}","import { hasOwn, isFunction, isObject, ShapeFlags } from \"@vue/shared\";\n\nexport function createComponentInstance(vnode){\n    const instance = {\n        vnode, // 组件的虚拟节点\n        data:{},\n        attrs:{}, // 去掉用户使用的props之后的结果 \n        props:{xxx:1}, // 用户写的props\n        slots:{},\n        render:null,\n        setupState:{},\n        subTree:null , // 组件渲染的虚拟节点的结果  $vnode _vnode\n        isMounted:false, // 组件是否挂载过\n        bc:null,\n        m:null,\n        ctx:{},\n        proxy:{},\n        update:null\n    }\n    // vue2 中取 props,data？ 在哪里取出来的 this._data this._props\n    instance.ctx = {_:instance}\n\n    // new Proxy\n    return instance;\n}\nconst isStatefulComponent = (vnode)=>{\n    return vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\n}\n// vue2 无状态组件 就是没有data，只有属性和外界传过来的数据 \n\nfunction createContext(instance){\n    return {\n        attrs:instance.attrs,// 用户传递的所有属性 ，不包含props\n        slots: instance.slots, // 组件的插槽\n        emit: ()=>{},// 用于发射最新的结果的 $emit\n        expose:()=>{} // 如果用户使用了ref属性 放到了组件上，他默认拿到的是组件的实例，但是如果定义了expose，那么就拿到的是expose，不在是组件实例\n    }\n}\nfunction finishComponentSetup(instance){\n    const Component = instance.vnode.type;\n    if(!instance.render){\n        if(!Component.render && Component.template){ // vue2 中模板编译原理就是把template变成render函数\n            // 把模板编译成render函数  -> compiler\n        }\n        instance.render = Component.render; // 组件的render挂载到实力上\n\n        // render函数 就是用户写的render， 数据可以在 instance.proxy上取\n    }\n}\nfunction handleSetupResult(instance,setupResult){\n    if(isFunction(setupResult)){\n        instance.render = setupResult\n    }else if(isObject(setupResult)){\n        instance.setupState = setupResult\n    }\n    finishComponentSetup(instance);\n}\n\nfunction setupStatefulComponent(instance){\n     const Component = instance.vnode.type // 用户定义的对象，组件本身\n     instance.proxy = new Proxy(instance.ctx,{\n         get({_:instance},key){\n            const {setupState,props,data} = instance;\n            if(hasOwn(setupState,key)){\n                return setupState[key]\n            }else if(hasOwn(data,key)){\n                return data[key]\n            }else if(hasOwn(props,key)){\n                return props[key]\n            }\n         },\n         set({_:instance},key,value){\n            const {setupState,props,data} = instance;\n            if(hasOwn(setupState,key)){\n                setupState[key] = value\n            }else if(hasOwn(data,key)){\n                 data[key] = value\n            }else if(hasOwn(props,key)){\n                 props[key] = value\n            }\n            return true;\n         }\n     })\n     let {setup } = Component;\n     if(setup){\n        let ctx = createContext(instance);\n        const setupResult = setup(instance.props,ctx);\n        handleSetupResult(instance,setupResult);\n     }else{\n        finishComponentSetup(instance);\n     }\n\n}\nexport function setupComponent(instance){\n    const {props,children} = instance.vnode;\n    // initProps()\n    // initSlot()\n    const isStateful =  isStatefulComponent(instance.vnode) \n    const setupResult = isStateful ? setupStatefulComponent(instance):undefined; // 取setup的返回值\n   \n\n}\n","import { effect } from \"@vue/reactivity\";\nimport { ShapeFlags } from \"@vue/shared\";\nimport { createAppAPI } from \"./apiCreateApp\"\nimport { createComponentInstance, setupComponent } from \"./component\";\nexport function createRenderer(rendererOptions) { // 不同的平台 rendererOptions 渲染属性是不同的\n\n    const {\n        insert: hostInsert,\n        remove: hostRemove,\n        patchProp: hostPatchProp,\n        createElement: hostCreateElement,\n        createText: hostCreateText,\n        setText: hostSetText,\n        setElementText: hostSetElementText,\n    } = rendererOptions\n\n    const mountChildren = (children, container) => {\n        for (let i = 0; i < children.length; i++) {\n            patch(null, children[i], container)\n        }\n    }\n    const mountElement = (n2, container) => {\n        // 递归渲染虚拟节点\n        const { props, type, children, shapeFlag } = n2;\n        let el = n2.el = hostCreateElement(type)\n        if (props) {\n            for (let key in props) {\n                hostPatchProp(el, key, null, props[key]);\n            }\n        }\n        if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n            hostSetElementText(el, children);\n        } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n            mountChildren(children, el);\n        }\n        hostInsert(el, container);\n    }\n\n\n    const processElement = (n1, n2, container) => {\n        if (n1 == null) {\n            // 元素的初始化\n            mountElement(n2, container);\n        } else {\n            // 元素的diff\n        }\n    }\n\n\n    const patch = (n1, n2, container) => { // n2 如果为null 会走销毁逻辑\n\n\n        // 渲染逻辑 diff算法\n\n        const { shapeFlag } = n2;\n\n        if (shapeFlag & ShapeFlags.ELEMENT) {\n            // n2 是什么类型的 如果是一个元素的虚拟节点 -》 创建一个元素的真实节点 插入到容器中\n            processElement(n1, n2, container);\n\n        } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n            // 初始化的时候 n2 是一个组件的虚拟节点\n            processComponent(n1, n2, container);\n\n        }\n    }\n    // 和 vue2 组件渲染一致 -》 组件的虚拟节点-》 创造组件实例-》 调用组件的render方法 -》 拿到组件的返回的虚拟节点 -》 创建真是节点 \n    // vue2 组件每个组件都有一个watcher， 如果数据更新 重新执行watcher， 依赖收集\n\n\n    const setupRenderEffect = (instance, container) => {\n        instance.update = effect(() => { // effect执行后会返回一个响应式的effect\n            if (!instance.isMounted) {\n                // 初渲染逻辑, 会进行依赖收集 用到的属性 会将组件的effect收集起来\n\n                let subTree = instance.subTree = instance.render.call(instance.proxy, instance.proxy)\n\n                patch(null, subTree, container);\n\n                instance.isMounted = true;\n            } else {\n                // 数据变化了 会执行此逻辑 diff算法\n                let prevSubTree = instance.subTree;\n                let nextSubTree =  instance.render.call(instance.proxy, instance.proxy);\n\n                // patch(prevSubTree, nextSubTree, container);\n\n                // 下周四 周六 手写Vuex4.0\n                // 下周四 周六 手写Vue-router4.0\n                // \n            }\n        },{\n            scheduler(effect){ // 多次更新 可以批量更新  effect.uid\n                // queueWatcher\n                console.log(effect,'--------------');\n            }\n        })\n    }\n\n    const mountComponent = (n2, container) => {\n        // 1.组件如何挂载？  new vnode.componentOptions.Ctor => vnode.componentInstance\n        // 创建一个组件的实例\n        const instance = createComponentInstance(n2); // 组件创建流程\n\n        setupComponent(instance); // 将自己的数据 填充到instance上\n\n        // instance.render(instance.proxy ) => h()  => 虚拟节点 => 真实节点\n        setupRenderEffect(instance, container); // 添加渲染effect\n    }\n    const processComponent = (n1, n2, container) => {\n        if (n1 == null) {\n            // 初始化\n            mountComponent(n2, container);\n        } else {\n            // 组件更新 updateComponent  组件的diff\n        }\n    }\n\n\n    const render = (vnode, container) => { // 初次渲染流程\n        // 根据虚拟节点 创建真实节点 插入到容器中\n        patch(null, vnode, container)\n    }\n\n    return { // 把这个api单独的抽离成了一个文件，并把render函数传入\n        createApp: createAppAPI(render)\n    }\n}","import { isArray, isObject } from \"@vue/shared\";\nimport { createVnode } from \"./vnode\";\n\nexport function h(type, propsOrChildren, children) {\n    //  2 3 多个\n    let l = arguments.length;\n    if (l == 2) {\n        // 1.类型 + 属性 \n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n            return createVnode(type, propsOrChildren)\n        } else {\n            // 第二个参数是一个数组 \n            return createVnode(type, null, propsOrChildren)\n        }\n    } else {\n        if (l == 3) {\n            return createVnode(type, propsOrChildren, children)\n        } else if (l > 3) {\n            return createVnode(type, propsOrChildren, Array.from(arguments).slice(2))\n        }\n    }\n\n}","export const nodeOps = {\n    createElement(tagName) {\n        return document.createElement(tagName)\n    },\n    remove(child) {\n        const parent = child.parentNode;\n        if (parent) {\n            parent.removeChild(child)\n        }\n    },\n    querySelector(selector) {\n        return document.querySelector(selector)\n    },\n    insert(child, parent, anchor = null) {\n        parent.insertBefore(child, anchor)\n    },\n    setElementText(el,text){\n        el.textContent = text; // innerHTML会有风险\n    },\n    createText(text){\n        return document.createTextNode(text);\n    },\n    setText(node,text){\n        node.nodeValue = text\n    }\n}","export function patchAttr(el,key,nextVal){\n    if(nextVal == null){\n        el.removeAttribute(key);\n    }else{\n        el.setAttribute(key,nextVal);\n    }\n}","export function patchClass(el,nextVal){\n    if(nextVal == null){\n        nextVal = '';\n    }\n    el.className = nextVal\n}","export function patchEvent(el, key, nextVal) { // onXXX\n    const invokers = el._vei || (el._vei = {}); // 用来缓存绑定的事件\n    const exists = invokers[key];\n    if (exists && nextVal) { // el.addEventListener('click')\n        exists.value = nextVal\n    } else {\n        const eventName = key.slice(2).toLowerCase();\n        if (nextVal) {\n            const fn = invokers[key] = createInvoker(nextVal);\n            el.addEventListener(eventName,fn)\n        } else {\n            el.removeEventListener(eventName, exists); //移除函数\n        }\n    }\n    // let fn = () =》{ fn.xxx()}\n    // fn.xxx = preFn\n    // el.addEventListenr(fn) \n    // fn.xxx = nextVal\n}\nfunction createInvoker(fn) {\n    const invoker = (e) => { invoker.value(e) }\n    invoker.value = fn;\n    return invoker;\n}","export function patchStyle(el, prevVal, nextVal){\n    const style = el.style; // 元素的样式 \n    if(nextVal == null){\n        el.removeAttribute('style')\n    }else{\n        if(prevVal){ // 之前有现在没有了 需要移除 \n            for(let key in prevVal){\n                 if(nextVal[key] == null){\n                     style[key] = ''; // 样式给空就清除掉了\n                 }\n            }\n        }\n        for(let key in nextVal){\n            style[key] = nextVal[key];\n        }\n    }\n}","import { patchAttr } from \"./modules/attr\";\nimport { patchClass } from \"./modules/class\";\nimport { patchEvent } from \"./modules/event\";\nimport { patchStyle } from \"./modules/style\";\n\n\nexport const patchProp = (el, key, prevVal, nextVal) => {\n    switch (key) {\n        case 'class': // dom操作 el.className\n            patchClass(el,nextVal)\n            break;\n        case 'style': // el.style.background\n            patchStyle(el, prevVal, nextVal); // 样式要比对前囧\n            break;\n        default:\n            if (/^on[a-z]/.test(key)) { // el.addEventListener\n                patchEvent(el,key,nextVal)\n            } else { // el.setAttribute\n                patchAttr(el,key,nextVal)\n            }\n    }\n}","// import { createRenderer } from \"@vue/runtime-core\";\nimport { createRenderer } from \"@vue/runtime-core/src\";\nimport { extend } from \"@vue/shared\";\nimport { nodeOps } from \"./nodeOps\";\nimport {patchProp} from  './patchProp'\n// runtimeDOM 主要的目的是提供 操作的api\n\n// 创建渲染器 createRenderer\n\nconst rendererOptions = extend({patchProp},nodeOps); // 渲染时需要用到这里的所有dom方法\n\n\n// 操作dom 无非就是dom的增删改查 。属性、类名、事件、。。。\n\nexport function createApp(rootComponent,rootProps=null){\n    const app = createRenderer(rendererOptions).createApp(rootComponent,rootProps);\n    let {mount} = app;\n    app.mount = function (container) { // \n        container = nodeOps.querySelector(container);\n        container.innerHTML = ''; // 移除v-clock\n        const proxy = mount(container);\n        return proxy;\n    }\n    return app\n}\n\n// 继承特性 ， 子类 （不同的实现）需要实现方法，都调用父类的底层功能，\n\n\nexport * from '@vue/runtime-core'"],"names":[],"mappings":";;;;AAAO,MAAM,QAAQ,GAAG,CAAC,GAAG,KAAK,OAAO,GAAG,IAAI,QAAQ,IAAI,GAAG,KAAK,IAAI,CAAC;AAEjE,MAAM,UAAU,GAAG,CAAC,GAAG,KAAK,OAAO,GAAG,IAAI,UAAU,CAAA;AACpD,MAAM,QAAQ,GAAG,CAAC,GAAG,KAAK,OAAO,GAAG,IAAI,QAAQ,CAAA;AAEhD,MAAM,OAAO,GAAI,KAAK,CAAC,OAAO,CAAC;AAC/B,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAGpC;AACO,MAAM,MAAM,GAAG,CAAC,MAAM,EAAC,GAAG,KAAK,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAC,GAAG,CAAC,CAAC;AAChF,MAAM,UAAU,GAAG,CAAC,QAAQ,EAAC,KAAK,KAAK,QAAQ,KAAK,KAAK,CAAA;AAEzD,MAAM,SAAS,GAAG,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC;AAmB3D;AACA;;SC/Bc,MAAM,CAAC,EAAE,EAAE,UAAe,EAAE;IACxC,IAAI,MAAM,GAAG,oBAAoB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAC/C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;QACf,MAAM,EAAE,CAAC;KACZ;IACD,OAAO,MAAM,CAAA;AACjB,CAAC;AACD,IAAI,GAAG,GAAG,CAAC,CAAC;AACZ,IAAI,YAAY,CAAC;AACjB,SAAS,oBAAoB,CAAC,EAAE,EAAE,OAAO;IACrC,MAAM,MAAM,GAAG;;QAEX,YAAY,GAAG,MAAM,CAAC;QAEtB,EAAE,EAAE,CAAC;QACL,YAAY,GAAG,IAAI,CAAC;KAEvB,CAAA;IACD,MAAM,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC;IAClB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC;IAChB,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,OAAO,MAAM,CAAC;AAClB,CAAC;AACD;AACA;;;;;;;AAOA,MAAM,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;SAChB,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG;IACnC,IAAI,CAAC,YAAY,EAAE;QACf,OAAM;KACT;IACD,IAAI,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACpC,IAAI,CAAC,OAAO,EAAE;QACV,SAAS,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;KAC9C;IACD,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3B,IAAI,CAAC,GAAG,EAAE;QACN,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;KACrC;IACD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;QACxB,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;KACxB;;AAEL,CAAC;SACe,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI;IAC5C,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAEtC,IAAI,CAAC,OAAO;QAAE,OAAO;;IAIrB,MAAM,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;IAC/B,MAAM,GAAG,GAAG,CAAC,YAAY;QACrB,IAAI,YAAY;YAAE,YAAY,CAAC,OAAO,CAAC,MAAM,IAAE,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;KAC5E,CAAA;;IAED,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,QAAQ,EAAE;;QAEpC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,MAAM;;;YAGxB,IAAI,MAAM,IAAI,QAAQ,IAAI,KAAK,GAAG,MAAM,EAAE;gBACtC,GAAG,CAAC,GAAG,CAAC,CAAA;aACX;SACJ,CAAC,CAAA;KACL;SAAM;QACH,IAAI,IAAI,IAAI,KAAK,EAAE;YACf,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;gBACnC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAA;aAC7B;iBAAI;gBACD,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;aACxB;SACJ;aAAM;YACH,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjC,GAAG,CAAC,OAAO,CAAC,CAAA;SACf;KACJ;IACD,YAAY,CAAC,OAAO,CAAC,CAAC,MAAU;QAC5B,IAAG,MAAM,CAAC,OAAO,CAAC,SAAS,EAAC;YACxB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;SACnC;aAAI;YACD,MAAM,EAAE,CAAA;SACX;KACJ,CAAC,CAAC;AAEP;;AC9FA;AAMA,MAAM,GAAG,GAAG,YAAY,EAAE,CAAC;AAC3B,MAAM,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;AAEvC,MAAM,kBAAkB,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAEpD,MAAM,GAAG,GAAG,YAAY,EAAE,CAAC;AAE3B;AACA,MAAM,WAAW,GAAG;IAChB,GAAG,CAAC,MAAM,EAAE,GAAG;QACX,OAAO,CAAC,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,CAAA;KACpD;CACJ,CAAA;AACD,SAAS,YAAY;IACjB,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ;QAC5C,SAAS;QACT,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;;QAG3B,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAC,GAAG,CAAC,CAAC;;QAK1F,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAEpD,IAAG,CAAC,MAAM,EAAC;YACP,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAC,KAAK,CAAC,CAAC;SACrC;aAAK,IAAI,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;;YAEnC,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAC,KAAK,CAAC,CAAC;SACrC;QACD,OAAO,GAAG,CAAC;KACd,CAAA;AACL,CAAC;AAGD,SAAS,YAAY,CAAC,UAAU,GAAG,KAAK,EAAE,OAAO,GAAG,KAAK;;IAErD,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ;;QAGrC,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAA;QAC5C,IAAI,CAAC,UAAU,EAAE;;;;;YAOb,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;SAE7B;QACD,IAAI,OAAO,EAAE;YACT,OAAO,GAAG,CAAC;SACd;QACD,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;YACf,OAAO,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAA;SACpD;QACD,OAAO,GAAG,CAAA;KACb,CAAA;AACL,CAAC;AACM,MAAM,eAAe,GAAG;IAC3B,GAAG;IACH,GAAG;CACN,CAAA;AAKM,MAAM,gBAAgB,GAAG,MAAM,CAAC;IACnC,GAAG,EAAE,WAAW;CACnB,EAAE,WAAW,CAAC,CAAA;AACwB,MAAM,CAAC;IAC1C,GAAG,EAAE,kBAAkB;CAC1B,EAAE,WAAW;;ACjFd;AAIA;AAEA,MAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;AAClC,MAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;SAGlB,QAAQ,CAAC,MAAa;IAClC,OAAO,oBAAoB,CAAC,MAAM,EAAC,eAAe,EAAC,WAAW,CAAC,CAAC;AACpE,CAAC;SAIe,QAAQ,CAAC,MAAa;IAClC,OAAO,oBAAoB,CAAC,MAAM,EAAC,gBAAgB,EAAC,WAAW,CAAC,CAAA;AACpE,CAAC;AAKD;SAGgB,oBAAoB,CAAC,MAAM,EAAC,YAAY,EAAC,QAAQ;;IAE7D,IAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;QACjB,OAAO,MAAM,CAAA;KAChB;;;IAGD,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACzC,IAAG,WAAW,EAAC;QACX,OAAO,WAAW,CAAA;KACrB;IACD,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAC,YAAY,CAAC,CAAC;IAC7C,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAC,KAAK,CAAC,CAAC;IAC3B,OAAO,KAAK,CAAA;AAChB;;SCnCgB,GAAG,CAAC,KAAK;IACrB,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC;AAC5B,CAAC;AAKD,MAAM,OAAO,GAAG,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AAE3D,MAAM,OAAO;IAEW;IAAiB;IAD7B,MAAM,CAAC;IACf,YAAoB,QAAQ,EAAS,SAAS;QAA1B,aAAQ,GAAR,QAAQ,CAAA;QAAS,cAAS,GAAT,SAAS,CAAA;QAC1C,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;KACzD;;IAED,IAAI,KAAK;QACL,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;QAC3B,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;IACD,IAAI,KAAK,CAAC,QAAQ;QACd,IAAI,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;YACrC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;YAC3D,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;SAC3C;KAEJ;CACJ;AACD,SAAS,SAAS,CAAC,KAAK,EAAE,SAAS,GAAG,KAAK;IACvC,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAA;AAExC,CAAC;AA4BD;;AChEA;SAIgB,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,GAAG,IAAI;IACpD,MAAM,SAAS,GACX,QAAQ,CAAC,IAAI,CAAC;QACV,QAAQ,CAAC,IAAI,CAAC;cACR,CAAC,CAAC;IAEhB,MAAM,KAAK,GAAG;QACV,WAAW,EAAC,IAAI;QAChB,IAAI;QACJ,KAAK;QACL,QAAQ;QACR,EAAE,EAAC,IAAI;QACP,GAAG,EAAC,KAAK,IAAI,KAAK,CAAC,GAAG;QACtB,SAAS;KACZ,CAAA;IAED,iBAAiB,CAAC,KAAK,EAAC,QAAQ,CAAC,CAAA;;;IAIjC,OAAO,KAAK,CAAC;AACjB,CAAC;AAED,SAAS,iBAAiB,CAAC,KAAK,EAAC,QAAQ;IACrC,IAAG,QAAQ,IAAI,IAAI,EAAC,CAEnB;SAAK,IAAG,OAAO,CAAC,QAAQ,CAAC,EAAC;QACvB,KAAK,CAAC,SAAS,4BAA8B;KAChD;SAAK;QACF,KAAK,CAAC,SAAS,0BAA6B;KAC/C;AACL,CAAC;AAED;AAEA;AACA;AAGA;AACA;;SC1CgB,YAAY,CAAC,MAAM;IAC/B,OAAO,CAAC,aAAa,EAAC,SAAS;QAC3B,IAAI,GAAG,GAAG;YACN,UAAU,EAAC,aAAa;YACxB,UAAU,EAAC,SAAS;YACpB,UAAU,EAAC,IAAI;YACf,GAAG;aAEF;YACD,KAAK;aAEJ;YACD,SAAS;aAER;YACD,KAAK,CAAC,SAAS;;gBAEX,MAAM,KAAK,GAAG,WAAW,CAAC,aAAa,EAAC,SAAS,CAAC,CAAC;;gBAInD,MAAM,CAAC,KAAK,EAAC,SAAS,CAAC,CAAC;gBAExB,GAAG,CAAC,UAAU,GAAG,SAAS,CAAC;aAE9B;SACJ,CAAA;QACD,OAAO,GAAG,CAAA;KACb,CAAA;AACL;;SC7BgB,uBAAuB,CAAC,KAAK;IACzC,MAAM,QAAQ,GAAG;QACb,KAAK;QACL,IAAI,EAAC,EAAE;QACP,KAAK,EAAC,EAAE;QACR,KAAK,EAAC,EAAC,GAAG,EAAC,CAAC,EAAC;QACb,KAAK,EAAC,EAAE;QACR,MAAM,EAAC,IAAI;QACX,UAAU,EAAC,EAAE;QACb,OAAO,EAAC,IAAI;QACZ,SAAS,EAAC,KAAK;QACf,EAAE,EAAC,IAAI;QACP,CAAC,EAAC,IAAI;QACN,GAAG,EAAC,EAAE;QACN,KAAK,EAAC,EAAE;QACR,MAAM,EAAC,IAAI;KACd,CAAA;;IAED,QAAQ,CAAC,GAAG,GAAG,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAA;;IAG3B,OAAO,QAAQ,CAAC;AACpB,CAAC;AACD,MAAM,mBAAmB,GAAG,CAAC,KAAK;IAC9B,OAAO,KAAK,CAAC,SAAS,8BAAgC;AAC1D,CAAC,CAAA;AACD;AAEA,SAAS,aAAa,CAAC,QAAQ;IAC3B,OAAO;QACH,KAAK,EAAC,QAAQ,CAAC,KAAK;QACpB,KAAK,EAAE,QAAQ,CAAC,KAAK;QACrB,IAAI,EAAE,SAAM;QACZ,MAAM,EAAC,SAAM;KAChB,CAAA;AACL,CAAC;AACD,SAAS,oBAAoB,CAAC,QAAQ;IAClC,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;IACtC,IAAG,CAAC,QAAQ,CAAC,MAAM,EAAC;QAChB,IAAG,CAAC,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,QAAQ,EAAC,CAE1C;QACD,QAAQ,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;;KAGtC;AACL,CAAC;AACD,SAAS,iBAAiB,CAAC,QAAQ,EAAC,WAAW;IAC3C,IAAG,UAAU,CAAC,WAAW,CAAC,EAAC;QACvB,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAA;KAChC;SAAK,IAAG,QAAQ,CAAC,WAAW,CAAC,EAAC;QAC3B,QAAQ,CAAC,UAAU,GAAG,WAAW,CAAA;KACpC;IACD,oBAAoB,CAAC,QAAQ,CAAC,CAAC;AACnC,CAAC;AAED,SAAS,sBAAsB,CAAC,QAAQ;IACnC,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAA;IACrC,QAAQ,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAC;QACpC,GAAG,CAAC,EAAC,CAAC,EAAC,QAAQ,EAAC,EAAC,GAAG;YACjB,MAAM,EAAC,UAAU,EAAC,KAAK,EAAC,IAAI,EAAC,GAAG,QAAQ,CAAC;YACzC,IAAG,MAAM,CAAC,UAAU,EAAC,GAAG,CAAC,EAAC;gBACtB,OAAO,UAAU,CAAC,GAAG,CAAC,CAAA;aACzB;iBAAK,IAAG,MAAM,CAAC,IAAI,EAAC,GAAG,CAAC,EAAC;gBACtB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA;aACnB;iBAAK,IAAG,MAAM,CAAC,KAAK,EAAC,GAAG,CAAC,EAAC;gBACvB,OAAO,KAAK,CAAC,GAAG,CAAC,CAAA;aACpB;SACH;QACD,GAAG,CAAC,EAAC,CAAC,EAAC,QAAQ,EAAC,EAAC,GAAG,EAAC,KAAK;YACvB,MAAM,EAAC,UAAU,EAAC,KAAK,EAAC,IAAI,EAAC,GAAG,QAAQ,CAAC;YACzC,IAAG,MAAM,CAAC,UAAU,EAAC,GAAG,CAAC,EAAC;gBACtB,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;aAC1B;iBAAK,IAAG,MAAM,CAAC,IAAI,EAAC,GAAG,CAAC,EAAC;gBACrB,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;aACrB;iBAAK,IAAG,MAAM,CAAC,KAAK,EAAC,GAAG,CAAC,EAAC;gBACtB,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;aACtB;YACD,OAAO,IAAI,CAAC;SACd;KACJ,CAAC,CAAA;IACF,IAAI,EAAC,KAAK,EAAE,GAAG,SAAS,CAAC;IACzB,IAAG,KAAK,EAAC;QACN,IAAI,GAAG,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;QAClC,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAC,GAAG,CAAC,CAAC;QAC9C,iBAAiB,CAAC,QAAQ,EAAC,WAAW,CAAC,CAAC;KAC1C;SAAI;QACF,oBAAoB,CAAC,QAAQ,CAAC,CAAC;KACjC;AAEN,CAAC;SACe,cAAc,CAAC,QAAQ;IACV,QAAQ,CAAC,MAAM;;;IAGxC,MAAM,UAAU,GAAI,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;IACnC,UAAU,GAAG,sBAAsB,CAAC,QAAQ,CAAC,GAAC,UAAU;AAGhF;;SCjGgB,cAAc,CAAC,eAAe;IAE1C,MAAM,EACF,MAAM,EAAE,UAAU,EAClB,MAAM,EAAE,UAAU,EAClB,SAAS,EAAE,aAAa,EACxB,aAAa,EAAE,iBAAiB,EAChC,UAAU,EAAE,cAAc,EAC1B,OAAO,EAAE,WAAW,EACpB,cAAc,EAAE,kBAAkB,GACrC,GAAG,eAAe,CAAA;IAEnB,MAAM,aAAa,GAAG,CAAC,QAAQ,EAAE,SAAS;QACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;SACtC;KACJ,CAAA;IACD,MAAM,YAAY,GAAG,CAAC,EAAE,EAAE,SAAS;;QAE/B,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;QAChD,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAA;QACxC,IAAI,KAAK,EAAE;YACP,KAAK,IAAI,GAAG,IAAI,KAAK,EAAE;gBACnB,aAAa,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;aAC5C;SACJ;QACD,IAAI,SAAS,0BAA6B;YACtC,kBAAkB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;SACpC;aAAM,IAAI,SAAS,4BAA8B;YAC9C,aAAa,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;SAC/B;QACD,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;KAC7B,CAAA;IAGD,MAAM,cAAc,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS;QACrC,IAAI,EAAE,IAAI,IAAI,EAAE;;YAEZ,YAAY,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;SAG/B;KACJ,CAAA;IAGD,MAAM,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS;;QAK5B,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;QAEzB,IAAI,SAAS,oBAAuB;;YAEhC,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;SAErC;aAAM,IAAI,SAAS,+BAAkC;;YAElD,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;SAEvC;KACJ,CAAA;;;IAKD,MAAM,iBAAiB,GAAG,CAAC,QAAQ,EAAE,SAAS;QAC1C,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;;gBAGrB,IAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAA;gBAErF,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;gBAEhC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;aAC7B;iBAAM;;gBAEe,QAAQ,CAAC,QAAQ;gBAChB,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE;;;;;aAO3E;SACJ,EAAC;YACE,SAAS,CAAC,MAAM;;gBAEZ,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,gBAAgB,CAAC,CAAC;aACxC;SACJ,CAAC,CAAA;KACL,CAAA;IAED,MAAM,cAAc,GAAG,CAAC,EAAE,EAAE,SAAS;;;QAGjC,MAAM,QAAQ,GAAG,uBAAuB,CAAC,EAAE,CAAC,CAAC;QAE7C,cAAc,CAAC,QAAQ,CAAC,CAAC;;QAGzB,iBAAiB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;KAC1C,CAAA;IACD,MAAM,gBAAgB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS;QACvC,IAAI,EAAE,IAAI,IAAI,EAAE;;YAEZ,cAAc,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;SAGjC;KACJ,CAAA;IAGD,MAAM,MAAM,GAAG,CAAC,KAAK,EAAE,SAAS;;QAE5B,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAA;KAChC,CAAA;IAED,OAAO;QACH,SAAS,EAAE,YAAY,CAAC,MAAM,CAAC;KAClC,CAAA;AACL;;SC5HgB,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,QAAQ;;IAE7C,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;IACzB,IAAI,CAAC,IAAI,CAAC,EAAE;;QAER,IAAI,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;YACxD,OAAO,WAAW,CAAC,IAAI,EAAE,eAAe,CAAC,CAAA;SAC5C;aAAM;;YAEH,OAAO,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,CAAA;SAClD;KACJ;SAAM;QACH,IAAI,CAAC,IAAI,CAAC,EAAE;YACR,OAAO,WAAW,CAAC,IAAI,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAA;SACtD;aAAM,IAAI,CAAC,GAAG,CAAC,EAAE;YACd,OAAO,WAAW,CAAC,IAAI,EAAE,eAAe,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;SAC5E;KACJ;AAEL;;ACtBO,MAAM,OAAO,GAAG;IACnB,aAAa,CAAC,OAAO;QACjB,OAAO,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;KACzC;IACD,MAAM,CAAC,KAAK;QACR,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;QAChC,IAAI,MAAM,EAAE;YACR,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;SAC5B;KACJ;IACD,aAAa,CAAC,QAAQ;QAClB,OAAO,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAA;KAC1C;IACD,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI;QAC/B,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;KACrC;IACD,cAAc,CAAC,EAAE,EAAC,IAAI;QAClB,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;IACD,UAAU,CAAC,IAAI;QACX,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;KACxC;IACD,OAAO,CAAC,IAAI,EAAC,IAAI;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;KACxB;CACJ;;SCzBe,SAAS,CAAC,EAAE,EAAC,GAAG,EAAC,OAAO;IACpC,IAAG,OAAO,IAAI,IAAI,EAAC;QACf,EAAE,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;KAC3B;SAAI;QACD,EAAE,CAAC,YAAY,CAAC,GAAG,EAAC,OAAO,CAAC,CAAC;KAChC;AACL;;SCNgB,UAAU,CAAC,EAAE,EAAC,OAAO;IACjC,IAAG,OAAO,IAAI,IAAI,EAAC;QACf,OAAO,GAAG,EAAE,CAAC;KAChB;IACD,EAAE,CAAC,SAAS,GAAG,OAAO,CAAA;AAC1B;;SCLgB,UAAU,CAAC,EAAE,EAAE,GAAG,EAAE,OAAO;IACvC,MAAM,QAAQ,GAAG,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;IAC3C,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,MAAM,IAAI,OAAO,EAAE;QACnB,MAAM,CAAC,KAAK,GAAG,OAAO,CAAA;KACzB;SAAM;QACH,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7C,IAAI,OAAO,EAAE;YACT,MAAM,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;YAClD,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAC,EAAE,CAAC,CAAA;SACpC;aAAM;YACH,EAAE,CAAC,mBAAmB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;SAC7C;KACJ;;;;;AAKL,CAAC;AACD,SAAS,aAAa,CAAC,EAAE;IACrB,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,EAAE,CAAA;IAC3C,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;IACnB,OAAO,OAAO,CAAC;AACnB;;SCvBgB,UAAU,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO;IAC3C,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;IACvB,IAAG,OAAO,IAAI,IAAI,EAAC;QACf,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC,CAAA;KAC9B;SAAI;QACD,IAAG,OAAO,EAAC;YACP,KAAI,IAAI,GAAG,IAAI,OAAO,EAAC;gBAClB,IAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,EAAC;oBACpB,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;iBACnB;aACL;SACJ;QACD,KAAI,IAAI,GAAG,IAAI,OAAO,EAAC;YACnB,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;SAC7B;KACJ;AACL;;ACVO,MAAM,SAAS,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO;IAC/C,QAAQ,GAAG;QACP,KAAK,OAAO;YACR,UAAU,CAAC,EAAE,EAAC,OAAO,CAAC,CAAA;YACtB,MAAM;QACV,KAAK,OAAO;YACR,UAAU,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;YACjC,MAAM;QACV;YACI,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACtB,UAAU,CAAC,EAAE,EAAC,GAAG,EAAC,OAAO,CAAC,CAAA;aAC7B;iBAAM;gBACH,SAAS,CAAC,EAAE,EAAC,GAAG,EAAC,OAAO,CAAC,CAAA;aAC5B;KACR;AACL,CAAC;;ACrBD;AAKA;AAEA;AAEA,MAAM,eAAe,GAAG,MAAM,CAAC,EAAC,SAAS,EAAC,EAAC,OAAO,CAAC,CAAC;AAGpD;SAEgB,SAAS,CAAC,aAAa,EAAC,SAAS,GAAC,IAAI;IAClD,MAAM,GAAG,GAAG,cAAc,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,aAAa,EAAC,SAAS,CAAC,CAAC;IAC/E,IAAI,EAAC,KAAK,EAAC,GAAG,GAAG,CAAC;IAClB,GAAG,CAAC,KAAK,GAAG,UAAU,SAAS;QAC3B,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAC7C,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;QAC/B,OAAO,KAAK,CAAC;KAChB,CAAA;IACD,OAAO,GAAG,CAAA;AACd;;;;;;;;"}