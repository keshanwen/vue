{"version":3,"file":"reactivity.esm-bundler.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/baseHandlers.ts","../src/reactive.ts","../src/ref.ts"],"sourcesContent":["export const isObject = (val) => typeof val == 'object' && val !== null;\nexport const isNumber = (val) => typeof val == 'number';\nexport const isFunction = (val) => typeof val == 'function'\nexport const isString = (val) => typeof val == 'string'\nexport const isBoolean = (val) =>  typeof val == 'boolean';\nexport const isArray =  Array.isArray;\nexport const extend = Object.assign;\n\n\n// 判断属性是不是原型属性 \nexport const hasOwn = (target,key) => Object.prototype.hasOwnProperty.call(target,key);\nexport const hasChanged = (oldValue,value) => oldValue !== value\n\nexport const isInteger = (key) => parseInt(key) + '' === key; // '3'  arr.xxx","import { isArray, isInteger } from \"@vue/shared/src\";\n\nexport function effect(fn, options: any = {}) { // fn 不具备数据变化了就更新视图\n    let effect = createReactiveEffect(fn, options); // 把fn包装成一个响应式的函数\n    if (!options.lazy) {\n        effect();\n    }\n    return effect\n}\nlet uid = 0;\nlet activeEffect; // 此模块内唯一的一个变量\nfunction createReactiveEffect(fn, options) {\n    const effect = function () {\n        // 我需要将effect暴露到外层\n        activeEffect = effect; // Dep.target = watcher\n\n        fn(); // 当我执行用户传入的函数时 会执行get方法\n        activeEffect = null;\n\n    }\n    effect.id = uid++; // 每个effect都有一个唯一的标识 （watcher）\n    effect._isEffect = true; // 用于标识这个函数是一个effect函数\n    effect.raw = fn; // 把用户传入的函数保存到当前的effect上\n    effect.deps = []; // 后续用来存放此effect对于哪些属性\n    effect.options = options;\n    return effect;\n}\n// obj   name   => \n/**\nweakMap = {\n    object:Map({\n        name:new Set(effect,effect)\n    })\n}\n */\nconst targetMap = new WeakMap(); // weakMap 的key只能是对象\nexport function track(target, type, key) { // {obj:name=> [effect,effect]}  weakMap : (map){key: new Set()}\n    if (!activeEffect) { // 说明取值操作是在effect之外操作的 \n        return\n    } // 直接跳过依赖收集\n    let depsMap = targetMap.get(target); // 先尝试看一下这个对象中是否存过属性\n    if (!depsMap) {\n        targetMap.set(target, (depsMap = new Map)); // {obj:map({key:set(effect,effect)})}\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n        depsMap.set(key, (dep = new Set));\n    }\n    if (!dep.has(activeEffect)) { // 同一个属性 不会添加重复的effect\n        dep.add(activeEffect)\n    }\n    // 制作一个依赖收集的关联列表\n}\nexport function trigger(target, key, value, type) { // ? 会引起 没用到的属性修改也会更新 \n    const depsMap = targetMap.get(target); // 先看一下有没有收集过依赖\n\n    if (!depsMap) return; // 如果没有收集过 直接跳过\n\n\n    // 为了实现批处理 我们把所有的effect放到一个set中 ，做一下去重 \n    const effectsQueue = new Set();\n    const add = (effectsToAdd) => {\n        if (effectsToAdd) effectsToAdd.forEach(effect=>effectsQueue.add(effect));\n    }\n    // 如果修改的是数组 并且改的是长度 要做一些处理  \n    if (isArray(target) && key == 'length') {\n        // value; // 是数组长度   depsMap 存放的key 可能是索引 如果索引大于数组长度 修奥触发更新\n        depsMap.forEach((dep, depKey) => { \n            // [1,2,3]  arr[2]  arr.length = 1  3=> undefined\n            // [1,2,3]  arr[2]  arr.length = 100  3=> 3\n            if (depKey == 'length' || value < depKey) {\n                add(dep)\n            }\n        })\n    } else {\n        if (type == 'add') { // 新增逻辑 需要触发更新 触发length的更新 针对的是数组 \n            if (isArray(target) && isInteger(key)) {\n                add(depsMap.get('length'))\n            }else{ // 对象新增逻辑, 对象新增逻辑也要触发对应的更新\n                add(depsMap.get(key))\n            }\n        } else {\n            const effects = depsMap.get(key); // 找到此属性对应的effect列表 ，直接执行即可\n            add(effects)\n        }\n    }\n    effectsQueue.forEach((effect:any)=>{\n        if(effect.options.scheduler){\n            effect.options.scheduler(effect)\n        }else{\n            effect()\n        }\n    });\n    \n}","// 我们期望 实现get和set\n\nimport { extend, hasChanged, hasOwn, isArray, isInteger, isObject } from \"@vue/shared/src\";\nimport { track, trigger } from \"./effect\";\nimport { reactive, readonly } from \"./reactive\";\n\nconst get = createGetter();\nconst readonlyGet = createGetter(true); // 仅读的get\nconst shallowGet = createGetter(false, true); // 非仅读但是是浅的\nconst shallowReadonlyGet = createGetter(true, true); // 仅读是浅的\n\nconst set = createSetter();\n\n// 响应式原理的核心就在这个依赖收集\nconst readonlySet = {\n    set(target, key) {\n        console.warn(`cannot set on ${key}, readonly!!!`)\n    }\n}\nfunction createSetter() {\n    return function set(target, key, value, receiver) { // value就是设置的值 ，其他一样\n        debugger;\n        let oldValue = target[key]; // 原对象来缓存老值，没有通过代理对象 不会触发get\n\n        // 如果是新增也要触发更新 \n        let hadKey = isArray(target) && isInteger(key) ? key < target.length : hasOwn(target,key);\n\n\n        // 触发视图更新， 去做处理\n\n        let res = Reflect.set(target, key, value, receiver); // target[key] = value\n\n        if(!hadKey){ // 新增逻辑\n            trigger(target, key, value,'add');\n        }else if (hasChanged(oldValue, value)) {\n            // 需要触发更新逻辑  obj name\n            trigger(target, key, value,'set'); // 触发这个对象上的属性 让他更新\n        }\n        return res;\n    }\n}\n\n\nfunction createGetter(isReadonly = false, shallow = false) {\n    // 取值的时候第一个是目标 ， 第二个是属性是谁， 第三个就是代理对象是谁\n    return function get(target, key, receiver) { // new Proxy({},{get(){}})\n        // 依赖收集  proxy 和 reflect 一般情况下会联合使用\n\n        let res = Reflect.get(target, key, receiver) //  target[key]\n        if (!isReadonly) { // 如果对象是一个仅读的属性，那就以意味着这个对象不可能被更改，不可能更新视图，不需要增添依赖收集\n            // 不是进仅读的才去收集依赖\n\n            // 如果当前是在effect中取值 要做一个映射关系  obj name -》 [effect,effect]\n            //                                         obj age  -》 [effect]\n            //  let dep  = new Dep() dep.depend()\n\n            track(target, 'get', key);\n\n        }\n        if (shallow) {\n            return res; // 如果是浅的说明不需要递归代理了\n        }\n        if (isObject(res)) { // 如果是对象 就递归代理，但是不是一开始就代理，是在用到这个对象的时候才进行代理的\n            return isReadonly ? readonly(res) : reactive(res)\n        }\n        return res//  target[key];  懒代理，当取值的时候才去进行代理 \n    }\n}\nexport const mutableHandlers = { // 核心进行劫持的方法  处理get和set的逻辑\n    get,\n    set\n}\nexport const shallowReactiveHandlers = {\n    get: shallowGet,\n    set\n}\nexport const readonlyHandlers = extend({\n    get: readonlyGet,\n}, readonlySet)\nexport const shallowReadonlyHandlers = extend({\n    get: shallowReadonlyGet,\n}, readonlySet)","// 根据不同的参数实现不同的功能 \nimport { isObject } from \"@vue/shared\"\nimport { mutableHandlers, readonlyHandlers, shallowReactiveHandlers, shallowReadonlyHandlers } from \"./baseHandlers\"\n\n// proxy 是一个es6的api，兼容性差\n\nconst reactiveMap = new WeakMap(); // 对象的key 不能用对象, 弱“引用”， map的key是可以用对象的  weakMap中的key只能是对象，如果引用的key 被置为 null weakmap 会自行自动回收\nconst readonlyMap = new WeakMap();\nconst shallowReadonlyMap = new WeakMap();\nconst shallowReactiveMap = new WeakMap();\nexport function reactive(target:object){ // mutableHandlers\n    return createReactiveObject(target,mutableHandlers,reactiveMap);\n}\nexport function shallowReactive(target:object){ // shallowReactiveHandlers\n    return createReactiveObject(target,shallowReactiveHandlers,shallowReactiveMap)\n}\nexport function readonly(target:object){ // readonlyHandlers\n    return createReactiveObject(target,readonlyHandlers,readonlyMap)\n}\nexport function shallowReadonly(target:object){ // shallowReadonlyHandlers\n    return createReactiveObject(target,shallowReadonlyHandlers,shallowReadonlyMap)\n}\n\n// 以上四个方法最终用的都是这一个方法，这个方法会根据参数的不同 来进行不同的处理\n\n\nexport function createReactiveObject(target,baseHandlers,proxyMap) {\n    // 和 vue2 一样要看一下目标是不是对象\n    if(!isObject(target)){\n        return target\n    }\n    // 创建代理对象返回， let obj = {} reactive(obj)   readonly(obj) 做缓存 不要重复代理\n    // const proxyMap  = isReadonly ? readonlyMap : reactiveMap\n    const existsProxy = proxyMap.get(target);\n    if(existsProxy){\n        return existsProxy\n    }\n    const proxy = new Proxy(target,baseHandlers);\n    proxyMap.set(target,proxy); // 缓存起来\n    return proxy\n}","import { hasChanged, isArray, isObject } from \"@vue/shared/src\";\nimport { track, trigger } from \"./effect\";\nimport { reactive } from \"./reactive\";\n\n\nexport function ref(value) {\n    return createRef(value);\n}\n\nexport function shallowRef(value) {\n    return createRef(value, true);\n}\nconst convert = val => isObject(val) ? reactive(val) : val;\n\nclass RefImpl {\n    private _value;\n    constructor(private rawValue, public isShallow) {\n        this._value = isShallow ? rawValue : convert(rawValue) // this._value 就是一个私有属性 \n    }\n    // 这两个方法 会被转化成defineProperty\n    get value() {\n        track(this, 'get', 'value')\n        return this._value;\n    }\n    set value(newValue) {\n        if (hasChanged(newValue, this.rawValue)) {\n            this.rawValue = newValue; // 说明属性变化 需要更新\n            this._value = this.isShallow ? newValue : convert(newValue)\n            trigger(this, 'value', newValue, 'set');\n        }\n\n    }\n}\nfunction createRef(value, isShallow = false) {\n    return new RefImpl(value, isShallow)\n\n}\nclass ObjectRefImpl{ // vue2 proxy 是一样的\n    constructor(public target,public key){}\n    get value(){\n        return this.target[this.key];\n    }\n    set value(newValue){\n        this.target[this.key] = newValue;\n    }\n}\n\n// promisefy\n// promisifyAll\nexport function toRefs(object){\n    // 对象的浅拷贝 \n    const ret = isArray(object)? new Array(object.length) : {};\n    for(let key in object){\n        ret[key] = toRef(object,key);\n    }\n    return ret;\n}\n\n\nexport function toRef(target,key){ // 就是取出某个属性变成ref\n    return new ObjectRefImpl(target,key)\n}\n\n\n// 模板渲染的时候 会去判断是不是ref 如果是ref  就直接.value"],"names":[],"mappings":"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"}