{"version":3,"file":"reactivity.global.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/baseHandlers.ts","../src/reactive.ts","../src/ref.ts","../src/computed.ts"],"sourcesContent":["export const isObject = (value) => typeof value == 'object' && value !== null;\r\nexport const extend = Object.assign\r\nexport const isArray = Array.isArray;\r\nexport const isFunction = (value) => typeof value == 'function'\r\nexport const isNumber = (value) => typeof value == 'number';\r\nexport const isString = (value) => typeof value === 'string';\r\nexport const isIntegerKey = (key) => parseInt(key) + '' === key;\r\n\r\n\r\nlet hasOwnpRroperty = Object.prototype.hasOwnProperty;\r\nexport const hasOwn = (target, key) => hasOwnpRroperty.call(target, key);\r\n\r\nexport const hasChanged = (oldValue,value) => oldValue !== value","import { isArray, isIntegerKey } from \"@vue/shared/src\";\r\nimport { TriggerOrTypes } from \"./operators\";\r\n\r\nexport function effect(fn, options: any = {}) {\r\n    // 我需要让这个effect变成响应的effect，可以做到数据变化重新执行 \r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) { // 默认的effect会先执行\r\n        effect(); // 响应式的effect默认会先执行一次\r\n    }\r\n    return effect;\r\n}\r\nlet uid = 0;\r\nlet activeEffect; // 存储当前的effect\r\nconst effectStack = []\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effectStack.includes(effect)) { // 保证effect没有加入到effectStack中\r\n            try {\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn(); // 函数执行时会取值  会执行get方法\r\n            } finally {\r\n                effectStack.pop();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    }\r\n    effect.id = uid++; // 制作一个effect标识 用于区分effect\r\n    effect._isEffect = true; // 用于标识这个是响应式effect\r\n    effect.raw = fn; // 保留effect对应的原函数\r\n    effect.options = options; // 在effect上保存用户的属性\r\n    return effect;\r\n}\r\n// 让，某个对象中的属性 收集当前他对应的effect函数\r\nconst targetMap = new WeakMap();\r\nexport function track(target, type, key) { // 可以拿到当前的effect\r\n    //  activeEffect; // 当前正在运行的effect\r\n    if (activeEffect === undefined) { // 此属性不用收集依赖，因为没在effect中使用\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set))\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n    }\r\n}\r\n\r\n// 找属性对应的effect 让其执行 （数组、对象）\r\nexport function trigger(target, type, key?, newValue?, oldValue?) {\r\n\r\n    // 如果这个属性没有 收集过effect，那不需要做任何操作\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) return;\r\n\r\n    const effects = new Set(); // 这里对effect去重了\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => effects.add(effect));\r\n        }\r\n    }\r\n    // 我要将所有的 要执行的effect 全部存到一个新的集合中，最终一起执行\r\n\r\n    // 1. 看修改的是不是数组的长度 因为改长度影响比较大\r\n    if (key === 'length' && isArray(target)) {\r\n        // 如果对应的长度 有依赖收集需要更新\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key > newValue) { // 如果更改的长度 小于收集的索引，那么这个索引也需要触发effect重新执行\r\n                add(dep)\r\n            }\r\n        })\r\n    } else {\r\n        // 可能是对象\r\n        if (key !== undefined) { // 这里肯定是修改， 不能是新增\r\n            add(depsMap.get(key)); // 如果是新增\r\n        }\r\n        // 如果修改数组中的 某一个索引 怎么办？\r\n        switch (type) {  // 如果添加了一个索引就触发长度的更新\r\n            case TriggerOrTypes.ADD:\r\n                if (isArray(target) && isIntegerKey(key)) {\r\n                    add(depsMap.get('length'));\r\n                }\r\n        }\r\n    }\r\n    effects.forEach((effect: any) => {\r\n        if(effect.options.scheduler){\r\n            effect.options.scheduler(effect);\r\n        }else{\r\n            effect();\r\n        }\r\n    })\r\n}\r\n// weakMap {name:'zf',age:12}  (map) =>{name => set(effect),age => set(effect)}\r\n// {name:'zf',age:12} => name => [effect effect]\r\n\r\n\r\n// 函数调用是一个栈型结构\r\n// effect(()=>{ // effect1   [effect1]\r\n//     state.name -> effect1\r\n//     effect(()=>{ // effect2\r\n//         state.age -> effect2\r\n//     })\r\n//     state.address -> effect1\r\n// })","// 实现 new Proxy(target, handler)\r\n\r\nimport { extend, hasChanged, hasOwn, isArray, isIntegerKey, isObject } from \"@vue/shared/src\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { reactive, readonly } from \"./reactive\";\r\n\r\n\r\nconst get = createGetter();\r\nconst shallowGet = createGetter(false, true);\r\nconst readonlyGet = createGetter(true);\r\nconst showllowReadonlyGet = createGetter(true, true);\r\nconst set = createSetter();\r\nconst shallowSet = createSetter(true);\r\nexport const mutableHandlers = {\r\n    get,\r\n    set\r\n}\r\nexport const shallowReactiveHandlers = {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n}\r\n\r\nlet readonlyObj = {\r\n    set: (target, key) => {\r\n        console.warn(`set on key ${key} falied`)\r\n    }\r\n}\r\nexport const readonlyHandlers = extend({\r\n    get: readonlyGet,\r\n}, readonlyObj)\r\nexport const shallowReadonlyHandlers = extend({\r\n    get: showllowReadonlyGet,\r\n}, readonlyObj)\r\n\r\n// 是不是仅读的，仅读的属性set时会报异常\r\n// 是不是深度的 \r\nfunction createGetter(isReadonly = false, shallow = false) { // 拦截获取功能\r\n    return function get(target, key, receiver) { // let proxy = reactive({obj:{}})\r\n        // proxy + reflect\r\n        // 后续Object上的方法 会被迁移到Reflect Reflect.getProptypeof()\r\n        // 以前target[key] = value 方式设置值可能会失败 ， 并不会报异常 ，也没有返回值标识\r\n        // Reflect 方法具备返回值\r\n        // reflect 使用可以不使用 proxy es6语法\r\n\r\n        const res = Reflect.get(target, key, receiver); // target[key];\r\n        if(!isReadonly){\r\n            // 收集依赖，等会数据变化后更新对应的视图\r\n            console.log('执行effect时会取值','收集effect')\r\n            \r\n            track(target,TrackOpTypes.GET,key)\r\n        }\r\n        if(shallow){\r\n            return res;\r\n        }\r\n        if(isObject(res)){ // vue2 是一上来就递归，vue3 是当取值时会进行代理 。 vue3的代理模式是懒代理\r\n            return isReadonly ? readonly(res) : reactive(res)\r\n        }\r\n        return res;\r\n    }\r\n}\r\nfunction createSetter(shallow = false) { // 蓝爵设置功能\r\n    return function set(target, key, value, receiver) {\r\n\r\n        const oldValue = target[key]; // 获取老的值\r\n\r\n        let hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target,key);\r\n\r\n        const result = Reflect.set(target, key, value, receiver); // target[key] = value\r\n\r\n\r\n        if(!hadKey){\r\n            // 新增 \r\n            trigger(target,TriggerOrTypes.ADD,key,value);\r\n        }else if(hasChanged(oldValue,value)){\r\n            // 修改 \r\n            trigger(target,TriggerOrTypes.SET,key,value,oldValue)\r\n        }\r\n\r\n\r\n\r\n        // 我们要区分是新增的 还是修改的  vue2 里无法监控更改索引，无法监控数组的长度变化  -》 hack的方法 需要特殊处理\r\n\r\n\r\n        // 当数据更新时 通知对应属性的effect重新执行\r\n\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n","import { isObject } from \"@vue/shared\"\r\nimport {\r\n    mutableHandlers,\r\n    shallowReactiveHandlers,\r\n    readonlyHandlers,\r\n    shallowReadonlyHandlers\r\n} from './baseHandlers'\r\nexport function reactive(target){\r\n    return createReactiveObject(target,false,mutableHandlers)\r\n}\r\nexport function shallowReactive(target){\r\n    return createReactiveObject(target,false,shallowReactiveHandlers)\r\n}\r\n\r\nexport function readonly(target){\r\n    return createReactiveObject(target,true,readonlyHandlers)\r\n}\r\n\r\nexport function shallowReadonly(target){\r\n    return createReactiveObject(target,true,shallowReadonlyHandlers)\r\n}\r\n\r\n// 是不是仅读 是不是深度， 柯里化  new Proxy() 最核心的需要拦截 数据的读取和数据的修改  get set\r\nconst reactiveMap = new WeakMap(); // 会自动垃圾回收，不会造成内存泄漏， 存储的key只能是对象\r\nconst readonlyMap = new WeakMap();\r\nexport function createReactiveObject(target,isReadonly,baseHandlers){\r\n    // 如果目标不是对象 没法拦截了，reactive这个api只能拦截对象类型\r\n    if( !isObject(target)){\r\n        return target; \r\n    }\r\n    // 如果某个对象已经被代理过了 就不要再次代理了  可能一个对象 被代理是深度 又被仅读代理了\r\n    const proxyMap = isReadonly? readonlyMap:reactiveMap\r\n    const existProxy = proxyMap.get(target);\r\n    if(existProxy){\r\n        return existProxy; // 如果已经被代理了 直接返回即可\r\n    }\r\n    const proxy = new Proxy(target,baseHandlers);\r\n    proxyMap.set(target,proxy); // 将要代理的对象 和对应代理结果缓存起来\r\n\r\n    return proxy;\r\n}\r\n","import { hasChanged, isArray, isObject } from \"@vue/shared/src\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { reactive } from \"./reactive\";\r\n\r\nexport function ref(value) {\r\n    // 将普通类型 变成一个对象 , 可以是对象 但是一般情况下是对象直接用reactive更合理\r\n    return createRef(value)\r\n}\r\n\r\n// ref 和 reactive的区别 reactive内部采用proxy  ref中内部使用的是defineProperty\r\n\r\n\r\nexport function shallowRef(value) {\r\n    return createRef(value, true)\r\n}\r\n\r\n// 后续 看vue的源码 基本上都是高阶函数 做了类似柯里化的功能\r\n\r\nconst convert = (val) => isObject(val) ? reactive(val) : val\r\n// beta 版本 之前的版本ref 就是个对象 ，由于对象不方便扩展 改成了类\r\nclass RefImpl {\r\n    public _value; //表示 声明了一个_value属性 但是没有赋值\r\n    public __v_isRef = true; // 产生的实例会被添加 __v_isRef 表示是一个ref属性\r\n    constructor(public rawValue, public shallow) { // 参数中前面增加修饰符 标识此属性放到了实例上\r\n        this._value = shallow ? rawValue : convert(rawValue)// 如果是深度 需要把里面的都变成响应式的\r\n    }\r\n    // 类的属性访问器\r\n    get value() { // 代理 取值取value 会帮我们代理到 _value上\r\n        track(this, TrackOpTypes.GET, 'value');\r\n        return this._value\r\n    }\r\n    set value(newValue) {\r\n        if (hasChanged(newValue, this.rawValue)) { // 判断老值和新值是否有变化\r\n            this.rawValue = newValue; // 新值会作为老值\r\n            this._value = this.shallow ? newValue : convert(newValue);\r\n            trigger(this, TriggerOrTypes.SET, 'value', newValue);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    return new RefImpl(rawValue, shallow)\r\n}\r\n\r\nclass ObjectRefImpl {\r\n    public __v_isRef = true;\r\n    constructor(public target, public key) {}\r\n    get value(){ // 代理  \r\n        return this.target[this.key] // 如果原对象是响应式的就会依赖收集\r\n    }\r\n    set value(newValue){\r\n        this.target[this.key] = newValue; // 如果原来对象是响应式的 那么就会触发更新\r\n    }\r\n}\r\n// promisify\r\n// promisifyAll\r\n\r\n\r\n// 将某一个key对应的值 转化成ref\r\nexport function toRef(target, key) { // 可以把一个对象的值转化成 ref类型\r\n    return new ObjectRefImpl(target, key)\r\n}\r\n\r\nexport function toRefs(object){ // object 可能传递的是一个数组 或者对象\r\n    const ret = isArray(object) ? new Array(object.length) :{}\r\n    for(let key in object){\r\n        ret[key] = toRef(object,key);\r\n    }\r\n    return ret;\r\n}","import { isFunction } from \"@vue/shared/src\";\nimport { effect, track, trigger } from \"./effect\";\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\n// 作业：调试 collectionHandlers ref 的api 和 computed\nclass ComputedRefImpl{\n    public _dirty = true; // 默认取值时不要用缓存\n    public _value;\n    public effect;\n    constructor(getter,public setter){ // ts 中默认不会挂载到this上\n        this.effect = effect(getter,{\n            lazy:true, // 默认不执行\n            scheduler:()=>{\n                if(!this._dirty){\n                    this._dirty = true;\n                    trigger(this,TriggerOrTypes.SET,'value')\n                }\n            }\n        })\n    }\n    get value(){ // 计算属性也要收集依赖\n        if(this._dirty){\n            this._value = this.effect(); // 会将用户的反回值返回\n            this._dirty = false;\n        }\n        track(this,TrackOpTypes.GET,'value')\n        return this._value;\n    }\n    set value(newValue){\n        this.setter(newValue)\n    }\n}\n\n// vue2 和 vue3 computed原理是不一样的\nexport function computed(getterOrOptions){\n    let getter;\n    let setter;\n\n\n    if(isFunction(getterOrOptions)){\n        getter = getterOrOptions;\n        setter = () =>{\n            console.warn('computed value must be readonly')\n        }\n    }else{\n        getter = getterOrOptions.get;\n        setter = getterOrOptions.set;\n    }\n\n    return new ComputedRefImpl(getter,setter)\n\n}"],"names":[],"mappings":"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"}