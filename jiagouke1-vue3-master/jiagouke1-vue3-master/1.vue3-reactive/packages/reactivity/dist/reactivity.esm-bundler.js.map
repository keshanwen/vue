{"version":3,"file":"reactivity.esm-bundler.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/baseHandlers.ts","../src/reactive.ts","../src/ref.ts"],"sourcesContent":["export const isObject = (value) => typeof value == 'object' && value !== null;\nexport const extend = Object.assign\nexport const isArray = Array.isArray;\nexport const isFunction = (value) => typeof value == 'function'\nexport const isNumber = (value) => typeof value == 'number';\nexport const isString = (value) => typeof value === 'string';\nexport const isIntegerKey = (key) => parseInt(key) + '' === key;\n\n\nlet hasOwnpRroperty = Object.prototype.hasOwnProperty;\nexport const hasOwn = (target, key) => hasOwnpRroperty.call(target, key);\n\nexport const hasChanged = (oldValue,value) => oldValue !== value","import { isArray, isIntegerKey } from \"@vue/shared/src\";\nimport { TriggerOrTypes } from \"./operators\";\n\nexport function effect(fn, options: any = {}) {\n    // 我需要让这个effect变成响应的effect，可以做到数据变化重新执行 \n    const effect = createReactiveEffect(fn, options);\n    if (!options.lazy) { // 默认的effect会先执行\n        effect(); // 响应式的effect默认会先执行一次\n    }\n    return effect;\n}\nlet uid = 0;\nlet activeEffect; // 存储当前的effect\nconst effectStack = []\nfunction createReactiveEffect(fn, options) {\n    const effect = function reactiveEffect() {\n        if (!effectStack.includes(effect)) { // 保证effect没有加入到effectStack中\n            try {\n                effectStack.push(effect);\n                activeEffect = effect;\n                return fn(); // 函数执行时会取值  会执行get方法\n            } finally {\n                effectStack.pop();\n                activeEffect = effectStack[effectStack.length - 1];\n            }\n        }\n    }\n    effect.id = uid++; // 制作一个effect标识 用于区分effect\n    effect._isEffect = true; // 用于标识这个是响应式effect\n    effect.raw = fn; // 保留effect对应的原函数\n    effect.options = options; // 在effect上保存用户的属性\n    return effect;\n}\n// 让，某个对象中的属性 收集当前他对应的effect函数\nconst targetMap = new WeakMap();\nexport function track(target, type, key) { // 可以拿到当前的effect\n    //  activeEffect; // 当前正在运行的effect\n    if (activeEffect === undefined) { // 此属性不用收集依赖，因为没在effect中使用\n        return;\n    }\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n        targetMap.set(target, (depsMap = new Map));\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n        depsMap.set(key, (dep = new Set))\n    }\n    if (!dep.has(activeEffect)) {\n        dep.add(activeEffect);\n    }\n}\n\n// 找属性对应的effect 让其执行 （数组、对象）\nexport function trigger(target, type, key?, newValue?, oldValue?) {\n\n    // 如果这个属性没有 收集过effect，那不需要做任何操作\n    const depsMap = targetMap.get(target);\n    if (!depsMap) return;\n\n    const effects = new Set(); // 这里对effect去重了\n    const add = (effectsToAdd) => {\n        if (effectsToAdd) {\n            effectsToAdd.forEach(effect => effects.add(effect));\n        }\n    }\n    // 我要将所有的 要执行的effect 全部存到一个新的集合中，最终一起执行\n\n    // 1. 看修改的是不是数组的长度 因为改长度影响比较大\n    if (key === 'length' && isArray(target)) {\n        // 如果对应的长度 有依赖收集需要更新\n        depsMap.forEach((dep, key) => {\n            if (key === 'length' || key > newValue) { // 如果更改的长度 小于收集的索引，那么这个索引也需要触发effect重新执行\n                add(dep)\n            }\n        })\n    } else {\n        // 可能是对象\n        if (key !== undefined) { // 这里肯定是修改， 不能是新增\n            add(depsMap.get(key)); // 如果是新增\n        }\n        // 如果修改数组中的 某一个索引 怎么办？\n        switch (type) {  // 如果添加了一个索引就触发长度的更新\n            case TriggerOrTypes.ADD:\n                if (isArray(target) && isIntegerKey(key)) {\n                    add(depsMap.get('length'));\n                }\n        }\n    }\n    effects.forEach((effect: any) => effect())\n}\n// weakMap {name:'zf',age:12}  (map) =>{name => set(effect),age => set(effect)}\n// {name:'zf',age:12} => name => [effect effect]\n\n\n// 函数调用是一个栈型结构\n// effect(()=>{ // effect1   [effect1]\n//     state.name -> effect1\n//     effect(()=>{ // effect2\n//         state.age -> effect2\n//     })\n//     state.address -> effect1\n// })","// 实现 new Proxy(target, handler)\n\nimport { extend, hasChanged, hasOwn, isArray, isIntegerKey, isObject } from \"@vue/shared/src\";\nimport { track, trigger } from \"./effect\";\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\nimport { reactive, readonly } from \"./reactive\";\n\n\nconst get = createGetter();\nconst shallowGet = createGetter(false, true);\nconst readonlyGet = createGetter(true);\nconst showllowReadonlyGet = createGetter(true, true);\nconst set = createSetter();\nconst shallowSet = createSetter(true);\nexport const mutableHandlers = {\n    get,\n    set\n}\nexport const shallowReactiveHandlers = {\n    get: shallowGet,\n    set: shallowSet\n}\n\nlet readonlyObj = {\n    set: (target, key) => {\n        console.warn(`set on key ${key} falied`)\n    }\n}\nexport const readonlyHandlers = extend({\n    get: readonlyGet,\n}, readonlyObj)\nexport const shallowReadonlyHandlers = extend({\n    get: showllowReadonlyGet,\n}, readonlyObj)\n\n// 是不是仅读的，仅读的属性set时会报异常\n// 是不是深度的 \nfunction createGetter(isReadonly = false, shallow = false) { // 拦截获取功能\n    return function get(target, key, receiver) { // let proxy = reactive({obj:{}})\n        // proxy + reflect\n        // 后续Object上的方法 会被迁移到Reflect Reflect.getProptypeof()\n        // 以前target[key] = value 方式设置值可能会失败 ， 并不会报异常 ，也没有返回值标识\n        // Reflect 方法具备返回值\n        // reflect 使用可以不使用 proxy es6语法\n\n        const res = Reflect.get(target, key, receiver); // target[key];\n        if(!isReadonly){\n            // 收集依赖，等会数据变化后更新对应的视图\n            console.log('执行effect时会取值','收集effect')\n            \n            track(target,TrackOpTypes.GET,key)\n        }\n        if(shallow){\n            return res;\n        }\n        if(isObject(res)){ // vue2 是一上来就递归，vue3 是当取值时会进行代理 。 vue3的代理模式是懒代理\n            return isReadonly ? readonly(res) : reactive(res)\n        }\n        return res;\n    }\n}\nfunction createSetter(shallow = false) { // 蓝爵设置功能\n    return function set(target, key, value, receiver) {\n\n        const oldValue = target[key]; // 获取老的值\n\n        let hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target,key);\n\n        const result = Reflect.set(target, key, value, receiver); // target[key] = value\n\n\n        if(!hadKey){\n            // 新增 \n            trigger(target,TriggerOrTypes.ADD,key,value);\n        }else if(hasChanged(oldValue,value)){\n            // 修改 \n            trigger(target,TriggerOrTypes.SET,key,value,oldValue)\n        }\n\n\n\n        // 我们要区分是新增的 还是修改的  vue2 里无法监控更改索引，无法监控数组的长度变化  -》 hack的方法 需要特殊处理\n\n\n        // 当数据更新时 通知对应属性的effect重新执行\n\n\n        return result;\n    }\n}\n\n","import { isObject } from \"@vue/shared\"\nimport {\n    mutableHandlers,\n    shallowReactiveHandlers,\n    readonlyHandlers,\n    shallowReadonlyHandlers\n} from './baseHandlers'\nexport function reactive(target){\n    return createReactiveObject(target,false,mutableHandlers)\n}\nexport function shallowReactive(target){\n    return createReactiveObject(target,false,shallowReactiveHandlers)\n}\n\nexport function readonly(target){\n    return createReactiveObject(target,true,readonlyHandlers)\n}\n\nexport function shallowReadonly(target){\n    return createReactiveObject(target,true,shallowReadonlyHandlers)\n}\n\n// 是不是仅读 是不是深度， 柯里化  new Proxy() 最核心的需要拦截 数据的读取和数据的修改  get set\nconst reactiveMap = new WeakMap(); // 会自动垃圾回收，不会造成内存泄漏， 存储的key只能是对象\nconst readonlyMap = new WeakMap();\nexport function createReactiveObject(target,isReadonly,baseHandlers){\n    // 如果目标不是对象 没法拦截了，reactive这个api只能拦截对象类型\n    if( !isObject(target)){\n        return target; \n    }\n    // 如果某个对象已经被代理过了 就不要再次代理了  可能一个对象 被代理是深度 又被仅读代理了\n    const proxyMap = isReadonly? readonlyMap:reactiveMap\n    const existProxy = proxyMap.get(target);\n    if(existProxy){\n        return existProxy; // 如果已经被代理了 直接返回即可\n    }\n    const proxy = new Proxy(target,baseHandlers);\n    proxyMap.set(target,proxy); // 将要代理的对象 和对应代理结果缓存起来\n\n    return proxy;\n}\n","import { hasChanged, isArray, isObject } from \"@vue/shared/src\";\nimport { track, trigger } from \"./effect\";\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\nimport { reactive } from \"./reactive\";\n\nexport function ref(value) {\n    // 将普通类型 变成一个对象 , 可以是对象 但是一般情况下是对象直接用reactive更合理\n    return createRef(value)\n}\n\n// ref 和 reactive的区别 reactive内部采用proxy  ref中内部使用的是defineProperty\n\n\nexport function shallowRef(value) {\n    return createRef(value, true)\n}\n\n// 后续 看vue的源码 基本上都是高阶函数 做了类似柯里化的功能\n\nconst convert = (val) => isObject(val) ? reactive(val) : val\n// beta 版本 之前的版本ref 就是个对象 ，由于对象不方便扩展 改成了类\nclass RefImpl {\n    public _value; //表示 声明了一个_value属性 但是没有赋值\n    public __v_isRef = true; // 产生的实例会被添加 __v_isRef 表示是一个ref属性\n    constructor(public rawValue, public shallow) { // 参数中前面增加修饰符 标识此属性放到了实例上\n        this._value = shallow ? rawValue : convert(rawValue)// 如果是深度 需要把里面的都变成响应式的\n    }\n    // 类的属性访问器\n    get value() { // 代理 取值取value 会帮我们代理到 _value上\n        track(this, TrackOpTypes.GET, 'value');\n        return this._value\n    }\n    set value(newValue) {\n        if (hasChanged(newValue, this.rawValue)) { // 判断老值和新值是否有变化\n            this.rawValue = newValue; // 新值会作为老值\n            this._value = this.shallow ? newValue : convert(newValue);\n            trigger(this, TriggerOrTypes.SET, 'value', newValue);\n        }\n    }\n}\nfunction createRef(rawValue, shallow = false) {\n    return new RefImpl(rawValue, shallow)\n}\n\nclass ObjectRefImpl {\n    public __v_isRef = true;\n    constructor(public target, public key) {}\n    get value(){ // 代理  \n        return this.target[this.key] // 如果原对象是响应式的就会依赖收集\n    }\n    set value(newValue){\n        this.target[this.key] = newValue; // 如果原来对象是响应式的 那么就会触发更新\n    }\n}\n// promisify\n// promisifyAll\n\n\n// 将某一个key对应的值 转化成ref\nexport function toRef(target, key) { // 可以把一个对象的值转化成 ref类型\n    return new ObjectRefImpl(target, key)\n}\n\nexport function toRefs(object){ // object 可能传递的是一个数组 或者对象\n    const ret = isArray(object) ? new Array(object.length) :{}\n    for(let key in object){\n        ret[key] = toRef(object,key);\n    }\n    return ret;\n}"],"names":[],"mappings":"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"}